{"version":3,"sources":["App.js","reportWebVitals.js","theme.js","index.js"],"names":["COLOR_TASK","isWeekDay","date","getDay","addBusinessDays","count","ctr","nextDate","addDays","getItemStyle","draggableStyle","backgroundColor","widthMultiplier","userSelect","padding","margin","boxShadow","textAlign","minWidth","maxWidth","display","background","getListStyle","isDraggingOver","style","minHeight","width","StyledBadge","withStyles","theme","badge","right","top","border","Badge","COMPONENT_LOOKUP","LABEL_LOOKUP","EMPTY_NEW_TASK","key","name","placeholder","estimate","App","useState","id","nanoid","developer","list","flexWrap","rows","setRows","links","setLinks","open","title","content","dialog","setDialog","workingDates","setWorkingDates","Date","startDate","setStartDate","sprintDays","setSprintDays","developmentRatio","setDevelopmentRatio","developmentDays","setDevelopmentDays","openSettings","setOpenSettings","openNewTask","setOpenNewTask","newTask","setNewTask","useEffect","loop","counter","push","length","calculateWorkingDates","handleNewTaskClose","onDrop","csvRows","pop","csvHeaders","shift","data","issueKeyIndex","findIndex","h","issueIdIndex","issueSummaryIndex","issueParentIdIndex","issueEstimateIndex","issueComponentsIndexes","map","i","filter","String","issueLabelIndexes","endToEndLinkedIndexes","endToStartLinkedIndexes","colorPalette","backgroundColorPerParentIds","reduce","acc","parentId","updatedLinks","produce","draft","forEach","index","text","issue","updatedRows","taskBucketRowIndex","row","taskBucket","summary","components","curr","component","labels","label","onError","err","file","inputElem","reason","console","log","dropArea","config","addRemoveButton","onRemoveFile","ButtonGroup","disableElevation","variant","marginBottom","Button","startIcon","onClick","items","len","find","item","releaseDate","dateGroup","groupBy","html","Object","keys","sort","a","b","tasks","task","format","input","document","getElementById","html2canvas","allowTaint","scale","then","canvas","toBlob","blob","navigator","clipboard","write","ClipboardItem","Dialog","onClose","DialogTitle","DialogContent","value","onChange","KeyboardButtonProps","TextField","type","event","parseInt","target","Typography","gutterBottom","Slider","newValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","r","updated","handleDeveloperNameChange","IconButton","aria-label","todo","splice","handleRemoveDeveloper","faker","findName","FormControlLabel","control","Checkbox","checked","undefined","Card","CardContent","onDragEnd","result","source","destination","destinationRowIndex","droppableId","sourceRowIndex","s","d","removed","total","indexOf","marginTop","badgeContent","color","direction","provided","snapshot","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","isDragging","CardHeader","subheader","textOverflow","overflow","whiteSpace","CardActions","disableSpacing","issueKey","issueSummary","linkedIssues","link","linkedIssuesByText","entries","handleInfoClick","Chip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","enableAllPlugins","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","utils","DateFnsUtils"],"mappings":"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","file":"static/js/main.655264f3.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid'\nimport faker from 'faker';\nimport { produce } from 'immer';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport getDay from 'date-fns/getDay'\nimport addDays from 'date-fns/addDays'\nimport format from 'date-fns/format'\nimport groupBy from 'lodash/groupBy';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { CSVReader } from 'react-papaparse'\nimport html2canvas from 'html2canvas'\nimport './App.css';\n\nconst COLOR_TASK = '#cbdadb';\nconst COLOR_DEV_DATE = '#99B898';\nconst COLOR_DATE = '#f8fbff'\nconst COLOR_ASSIGNEE = '#f8fbff';\nconst COLOR_1 = '#a8e6cf';\nconst COLOR_2 = '#dcedc1';\nconst COLOR_3 = '#ffd3b6';\nconst COLOR_4 = '#ffaaa5';\nconst COLOR_5 = '#ff8b94';\nconst ISSUE_KEY = 'Issue key';\nconst ISSUE_ID = 'Issue id';\nconst ISSUE_SUMMARY = 'Summary';\nconst ISSUE_PARENT_ID = 'Parent id';\nconst ISSUE_ESTIMATE = 'Σ Original Estimate';\nconst ISSUE_COMPONENTS = 'Components';\nconst ISSUE_LABELS = 'Labels';\nconst ISSUE_LINK_END_TO_START = 'Outward issue link (Gantt End to Start)'\nconst ISSUE_LINK_END_TO_END = 'Outward issue link (Gantt End to End)'\n\nconst isWeekDay = (date) => {\n  const day = getDay(date);\n\n  switch(day) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nconst addBusinessDays = (date, count) => {\n  let ctr = 1;\n  let nextDate = date;\n\n\n  while(ctr <= count) {\n     nextDate = addDays(nextDate, 1);\n\n    if (isWeekDay(nextDate)) {\n      ctr++;\n    }\n  }\n\n  return nextDate;\n}\n\nconst calculateWorkingDates = (startDate, sprintDays) => {\n  let loop = true;\n  let counter = 0;\n  const workingDates = [];\n  while(loop) {\n    const date = addDays(startDate, counter);\n\n    if (isWeekDay(date)) {\n      workingDates.push(date);\n    }\n\n    counter++;\n    if (workingDates.length >= sprintDays) {\n      loop = false;\n    }\n  }\n\n  return workingDates;\n}\n\nconst getItemStyle = (isDragging = false, draggableStyle = {}, backgroundColor= COLOR_TASK,  widthMultiplier = 0.5) => ({\n  // some basic styles to make the jiras look a bit nicer\n  userSelect: 'none',\n  padding: '0 0 0 0',\n  margin: 0,\n  boxShadow: '#302828 0px 0px 2px 0px inset',\n  textAlign: 'center',\n  minWidth: 100 * widthMultiplier,\n  maxWidth: 100 * widthMultiplier,\n  display: 'grid',\n\n  // change background colour if dragging\n  background: backgroundColor,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, style ={}) => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  display: 'flex',\n  padding: 8,\n  minHeight: 36,\n  margin: '0 0 0 10px',\n  width: '100%',\n  ...style\n});\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: 18,\n    top: 13,\n    border: `2px solid black`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\nconst COMPONENT_LOOKUP = {\n  'Back-End': 'be',\n  'Front-End': 'fe',\n  'QA': 'qa'\n};\n\nconst LABEL_LOOKUP = {\n  'technical_task': 'tech',\n};\n\nconst EMPTY_NEW_TASK = {\n  key: '',\n  name: '',\n  placeholder: false,\n  estimate: '',\n}\n\nfunction App() {\n  const [rows, setRows] = useState([\n    {\n      id: nanoid(),\n      name: 'Task Bucket',\n      developer: false,\n      list: [],\n      style: { flexWrap: 'wrap' }\n    }\n  ]);\n  const [links, setLinks] = useState([]);\n  const [dialog, setDialog] = useState({ open: false, title: '', content: '' });\n  const [workingDates, setWorkingDates] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [sprintDays, setSprintDays] = useState(10);\n  const [developmentRatio, setDevelopmentRatio] = useState(0.6);\n  const [developmentDays, setDevelopmentDays] = useState(sprintDays * developmentRatio);\n  const [openSettings, setOpenSettings] = useState(false)\n  const [openNewTask, setOpenNewTask] = useState(false);\n  const [newTask, setNewTask] = useState(EMPTY_NEW_TASK);\n\n\n  useEffect(()=> {\n    setWorkingDates(calculateWorkingDates(startDate, sprintDays))\n  }, [startDate, sprintDays]);\n\n  useEffect(()=> {\n    setDevelopmentDays(sprintDays * developmentRatio)\n  }, [sprintDays, developmentRatio]);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    const updated = produce(rows, draft => {\n      const destinationRowIndex = draft.findIndex(row => row.name === destination.droppableId);\n      const sourceRowIndex = draft.findIndex(row => row.name === source.droppableId);\n\n      const s = draft[sourceRowIndex];\n      const d = draft[destinationRowIndex];\n\n      const [removed]  = s.list.splice(source.index, 1);\n      d.list.splice(destination.index, 0, removed);\n    });\n\n    setRows(updated)\n  }\n\n  const handleOnDrop = (csvRows) => {\n    csvRows.pop();\n    const { data: csvHeaders } = csvRows.shift();\n    const issueKeyIndex = csvHeaders.findIndex(h => h === ISSUE_KEY);\n    const issueIdIndex = csvHeaders.findIndex(h => h === ISSUE_ID);\n    const issueSummaryIndex = csvHeaders.findIndex(h => h === ISSUE_SUMMARY);\n    const issueParentIdIndex = csvHeaders.findIndex(h => h === ISSUE_PARENT_ID);\n    const issueEstimateIndex = csvHeaders.findIndex(h => h === ISSUE_ESTIMATE);\n    const issueComponentsIndexes = csvHeaders.map((h, i) => h === ISSUE_COMPONENTS ? i : '').filter(String);\n    const issueLabelIndexes = csvHeaders.map((h, i) => h === ISSUE_LABELS ? i : '').filter(String);\n    const endToEndLinkedIndexes = csvHeaders.map((h, i) => h === ISSUE_LINK_END_TO_END ? i : '').filter(String);\n    const endToStartLinkedIndexes = csvHeaders.map((h, i) => h === ISSUE_LINK_END_TO_START ? i : '').filter(String);\n\n    const colorPalette = [COLOR_1, COLOR_2, COLOR_3, COLOR_4, COLOR_5];\n    const backgroundColorPerParentIds = csvRows.reduce((acc, {data}) => {\n      const parentId = data[issueParentIdIndex];\n\n      if (parentId === '') {\n        return acc;\n      }\n\n      if (!acc[parentId]) {\n        acc[parentId] = COLOR_TASK;\n      } else if (acc[parentId] === COLOR_TASK) {\n        acc[parentId] = colorPalette.shift();\n      }\n\n      return acc;\n    }, {});\n\n    const updatedLinks = produce(links, draft => {\n      csvRows.forEach(({data}) => {\n\n        endToEndLinkedIndexes.forEach(index => {\n          if (data[index] !== '') {\n            draft.push({\n              key: data[issueKeyIndex],\n              text: 'has to be finished together',\n              issue: data[index]\n            });\n\n            draft.push({\n              key: data[index],\n              text: 'has to be finished together',\n              issue: data[issueKeyIndex]\n            });\n          }\n        });\n\n        endToStartLinkedIndexes.forEach(index => {\n          if (data[index] !== '') {\n            draft.push({\n              key: data[issueKeyIndex],\n              text: 'has to be done before',\n              issue: data[index]\n            });\n\n            draft.push({\n              key: data[index],\n              text: 'has to be done after',\n              issue: data[issueKeyIndex]\n            });\n          }\n        });\n      });\n    });\n\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n\n      const taskBucket = draft[taskBucketRowIndex];\n\n      csvRows.forEach(({data}) => {\n        const id = data[issueIdIndex];\n        taskBucket.list.push({\n          id: id || nanoid(),\n          key: data[issueKeyIndex] || nanoid(),\n          placeholder: id ? false : true,\n          summary: data[issueSummaryIndex],\n          estimate: data[issueEstimateIndex] / 28800,\n          backgroundColor: backgroundColorPerParentIds[data[issueParentIdIndex]],\n          components: issueComponentsIndexes.reduce((acc, curr)=> {\n            const component = COMPONENT_LOOKUP[data[curr]];\n            if (!component) {\n              return acc;\n            }\n\n            acc.push(component)\n\n            return acc;\n          }, []),\n          labels: issueLabelIndexes.reduce((acc, curr)=> {\n            const label = LABEL_LOOKUP[data[curr]];\n            if (!label) {\n              return acc;\n            }\n\n            acc.push(label)\n\n            return acc;\n          }, []),\n        });\n      })\n    });\n\n    setRows(updatedRows);\n    setLinks(updatedLinks);\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  const handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  const handleInfoClick = (issueKey, issueSummary) => {\n    const linkedIssues = links.filter(link => link.key === issueKey);\n\n    const linkedIssuesByText = groupBy(linkedIssues, 'text');\n    setDialog({\n      open: true,\n      title: issueKey,\n      content: <>\n        <Typography variant=\"body1\" gutterBottom>{issueSummary}</Typography>\n        {linkedIssues.length > 0 &&\n          (<>\n            {Object.entries(linkedIssuesByText).map(([key, links]) => {\n              return (<>\n                <Typography variant=\"subtitle1\">{key}:</Typography>\n                {links.map(link => <Typography variant=\"subtitle2\">{link.issue}</Typography>)}\n              </>)\n            })}\n          </>)\n        }\n      </>,\n    });\n  }\n\n  const handleDialogClose = () => {\n    setDialog({\n      open: false,\n      title: '',\n      content: '',\n    });\n  }\n\n  const handleGenerateReport = () => {\n    const items = rows.reduce((acc, row) => {\n      for(let i = 0, len = row.list.length; i < len; i++) {\n        let startDate;\n        if (i === 0) {\n          startDate = workingDates[0];\n        } else {\n          startDate = acc.find(item => item.id === row.list[i-1].id).releaseDate;\n        }\n\n        const item = row.list[i];\n        acc.push({\n          id: item.id,\n          key: item.key,\n          releaseDate: addBusinessDays(startDate, item.estimate)\n        });\n      }\n\n      return acc;\n    }, []);\n\n    const dateGroup  = groupBy(items, 'releaseDate');\n\n    const html = Object.keys(dateGroup).sort((a,b) => new Date(a) - new Date(b)).map(date => {\n      const tasks = dateGroup[date].filter(task => !task.placeholder);\n\n      return (<>\n        <span>{format(new Date(date), 'do MMM')}:</span>\n        <ol>\n          {tasks.map(task => <li>{`https://altayerdigital.atlassian.net/browse/${task.key}`}</li>)}\n        </ol>\n      </>)\n    })\n\n    setDialog({\n      open: true,\n      title: 'Task Grouped By Release Date',\n      content: html,\n    });\n  }\n\n  const takeScreenshot = () => {\n    const input =  document.getElementById('screenshot');\n    html2canvas(input, {\n      backgroundColor: null,\n      allowTaint: true,\n      scale: 2,\n    }).then((canvas) => {\n      // eslint-disable-next-line no-undef\n      canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({'image/png': blob})]));\n\n      setDialog({\n        open: true,\n        title: 'Screenshot copied to clipboard'\n      });\n    });\n  }\n\n  const handleSprintDaysChange = (event) => {\n    setSprintDays(parseInt(event.target.value, 10));\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(true);\n  }\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n  };\n\n  const handleDevelopmentRatioChange = (event, newValue) => {\n    setDevelopmentRatio(newValue);\n  };\n\n\n  const handleNewTask = () => {\n    setOpenNewTask(true);\n  }\n\n  const handleNewTaskClose = () => {\n    setOpenNewTask(false);\n    setNewTask(EMPTY_NEW_TASK)\n  };\n\n  const handleNewTaskEstimateChange = (event, newValue) => {\n    setNewTask({\n      ...newTask,\n      estimate: newValue,\n    });\n  };\n\n  const handleNewTaskKeyChange = (event) => {\n    setNewTask({\n      ...newTask,\n      key: event.target.value,\n    });\n  };\n\n  const handleNewTaskPlaceholderChange = (event) => {\n    setNewTask({\n      ...newTask,\n      placeholder: event.target.checked,\n    });\n  };\n\n  const handleAddNewTask = () => {\n    console.log(newTask)\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n\n      const taskBucket = draft[taskBucketRowIndex];\n\n      taskBucket.list.push({\n        id: nanoid(),\n        key: newTask.key,\n        placeholder: newTask.placeholder,\n        summary: '',\n        estimate: newTask.estimate,\n        backgroundColor: undefined,\n        components: [],\n        labels: [],\n      });\n    });\n\n    setRows(updatedRows);\n    handleNewTaskClose()\n  }\n\n  const handleAddDeveloper = () => {\n    const updated = produce(rows, draft => {\n      draft.splice(rows.length - 1, 0, { id: nanoid(), name: faker.name.findName(), developer: true, list: [] });\n    })\n\n    setRows(updated);\n  }\n\n  const handleRemoveDeveloper = (id) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(todo => todo.id === id)\n      if (index !== -1){\n        draft.splice(index, 1);\n      }\n    });\n\n    setRows(updated);\n  }\n\n  const handleDeveloperNameChange = (id, value) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(row => row.id === id);\n      draft[index].name = value;\n    });\n\n    setRows(updated);\n  }\n\n  return (\n    <>\n    <CSVReader\n      onDrop={handleOnDrop}\n      onError={handleOnError}\n      style={{ dropArea: { margin: '20px' } }}\n      config={{}}\n      addRemoveButton\n      onRemoveFile={handleOnRemoveFile}\n    >\n      <span>Drop CSV file here or click to upload.</span>\n    </CSVReader>\n    <ButtonGroup disableElevation variant=\"contained\" style={{ marginBottom: '20px' }}>\n      <Button startIcon={<SettingsIcon />} onClick={handleSettings}>Settings</Button>\n      <Button startIcon={<NotesIcon />} onClick={handleGenerateReport}>Text Report</Button>\n      <Button startIcon={<PhotoCameraIcon />} onClick={takeScreenshot}>Screenshot</Button>\n      <Button startIcon={<AddIcon />} onClick={handleNewTask}>Add Task</Button>\n    </ButtonGroup>\n    <Dialog onClose={handleDialogClose} open={dialog.open}>\n      <DialogTitle>{dialog.title}</DialogTitle>\n      <DialogContent>{dialog.content}</DialogContent>\n    </Dialog>\n    <Dialog onClose={handleSettingsClose} open={openSettings}>\n      <DialogTitle>Settings</DialogTitle>\n      <DialogContent>\n        <div style={{ display: 'grid', padding: '20px' }} >\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Select start date\"\n            format=\"MM/dd/yyyy\"\n            value={startDate}\n            onChange={setStartDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n          <TextField label=\"Sprint Days\" variant=\"outlined\" type=\"number\" value={sprintDays} onChange={handleSprintDaysChange}/>\n          <Typography gutterBottom>Development Ratio</Typography>\n          <Slider\n            value={developmentRatio}\n            onChange={handleDevelopmentRatioChange}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.1}\n            marks\n            min={0.1}\n            max={1}\n          />\n          <Typography gutterBottom>Developers</Typography>\n          {rows.filter(r => !!r.developer).map((row) => {\n            return (<div style={{ display: 'flex' }}>\n              <TextField variant=\"outlined\" value={row.name} onChange={(event) => {handleDeveloperNameChange(row.id, event.target.value)}}/>\n              <IconButton aria-label=\"remove\" onClick={() => {handleRemoveDeveloper(row.id)}}>\n                <RemoveIcon />\n              </IconButton>\n            </div>)\n          })}\n          <Button startIcon={<AddIcon />} onClick={handleAddDeveloper}>Add Developer</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n    <Dialog onClose={handleNewTaskClose} open={openNewTask}>\n      <DialogTitle>New Task</DialogTitle>\n      <DialogContent>\n        <div style={{ display: 'grid', padding: '20px' }} >\n            <TextField label=\"Key\" variant=\"outlined\" type=\"text\" value={newTask.key} onChange={handleNewTaskKeyChange}/>\n            <FormControlLabel\n              label=\"Is Placeholder\"\n              control={\n                <Checkbox\n                  checked={newTask.placeholder}\n                  onChange={handleNewTaskPlaceholderChange}\n                />\n              }\n            />\n            <Typography gutterBottom>Estimate</Typography>\n            <Slider\n              value={newTask.estimate}\n              onChange={handleNewTaskEstimateChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.5}\n              marks\n              min={0.0}\n              max={6}\n            />\n            <Button startIcon={<AddIcon />} onClick={handleAddNewTask}>Add Task</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n    <div style={{ width: 'fit-content' }} id=\"screenshot\">\n      <div style={{ display: 'flex' }}>\n        <div style={{minWidth: 180, minHeight: '50px'}}>\n\n        </div>\n        <Card style={getListStyle()}>\n          {workingDates.map((date,i) => (\n            <CardContent key={date} style={getItemStyle(false, {}, i < developmentDays ? COLOR_DEV_DATE : COLOR_DATE, 1)}>{format(date, 'do MMM')}</CardContent>\n          ))}\n        </Card>\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {rows.map((row) => {\n          const total = row.list.filter(i => i.labels.indexOf('tech') === -1).reduce((acc, curr) => acc + (curr.placeholder ? 0 : curr.estimate), 0);\n\n          return (<div key={row.name} style={{ display: 'flex', marginTop: '10px' }}>\n            <StyledBadge badgeContent={total} color={total > developmentDays ? 'error' : 'primary'}>\n              <Card style={{minWidth: 180, background: COLOR_ASSIGNEE}}>\n                <CardContent>\n                  {row.name}\n                </CardContent>\n              </Card>\n            </StyledBadge>\n            <Droppable droppableId={row.name} direction=\"horizontal\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver, row.style)}\n                  {...provided.droppableProps}\n                >\n                  {row.list.map((item, index) => (\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\n                      {(provided, snapshot) => (\n                        <StyledBadge badgeContent={item.placeholder ? null : item.estimate} color=\"primary\">\n                          <Card\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style,\n                              item.backgroundColor,\n                              item.estimate,\n                            )}\n                          >\n                            <CardHeader subheader={item.placeholder ? '' : item.key} style={{maxWidth: `${100*item.estimate}px`, padding: '16px 4px 0 4px'}}/>\n                            <CardContent style={{maxWidth: `${100*item.estimate}px`, padding: '0 4px 0 4px'}}>\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap'}}>\n                                {item.summary}\n                              </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing style={{maxWidth: `${100*item.estimate}px`, padding: '0 4px 0 4px'}}>\n                              {!item.placeholder &&\n                                <IconButton aria-label=\"add to favorites\" onClick={()=> {\n                                  handleInfoClick(item.key, item.summary)\n                                }}>\n                                  <InfoIcon />\n                                </IconButton> \n                              }\n                              {!item.placeholder && [...item.components,...item.labels].map((component) => (\n                                <Chip key={`${item.id}:${component}`} label={component} variant=\"outlined\" />\n                              ))}\n                            </CardActions>\n                          </Card>\n                        </StyledBadge>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )})}\n\n      </DragDropContext>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {enableAllPlugins} from \"immer\"\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n   <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}