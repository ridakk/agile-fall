{"version":3,"sources":["ButtonMenu.js","LinksContext.js","RowContext.js","CsvDropzone.js","DevelopmentDaysContext.js","NewTaskDialog.js","WorkingDatesContext.js","SettingsDialog.js","StyledBadge.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["ButtonMenu","handleSettings","handleGenerateReport","takeScreenshot","handleNewTask","ButtonGroup","disableElevation","variant","style","marginBottom","Button","startIcon","onClick","createContext","links","setLinks","rows","setRows","COLOR_TASK","COMPONENT_LOOKUP","QA","LABEL_LOOKUP","technical_task","CsvDropzone","useContext","RowContext","LinksContext","onDrop","csvRows","pop","csvHeaders","shift","data","issueKeyIndex","findIndex","h","issueIdIndex","issueSummaryIndex","issueParentIdIndex","issueEstimateIndex","issueComponentsIndexes","map","i","filter","String","issueLabelIndexes","endToEndLinkedIndexes","endToStartLinkedIndexes","colorPalette","backgroundColorPerParentIds","reduce","acc","parentId","updatedLinks","produce","draft","forEach","index","find","d","key","push","text","issue","updatedRows","taskBucketRowIndex","row","name","taskBucket","prepareComponents","curr","component","prepareLabels","label","id","nanoid","existingBucket","list","l","existingTask","summary","estimate","backgroundColor","components","labels","placeholder","onError","err","console","log","dropArea","margin","config","addRemoveButton","onRemoveFile","developmentDays","setDevelopmentDays","EMPTY_NEW_TASK","NewTaskDialog","onClose","open","useState","newTask","setNewTask","useEffect","Dialog","DialogTitle","DialogContent","display","padding","TextField","type","value","onChange","event","target","FormControlLabel","control","Checkbox","checked","Typography","gutterBottom","Slider","newValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","undefined","workingDates","setWorkingDates","SettingsDialog","Date","startDate","setStartDate","sprintDays","setSprintDays","developmentRatio","setDevelopmentRatio","WorkingDatesContext","DevelopmentDaysContext","loop","counter","date","addDays","isWeekend","length","calculateWorkingDates","format","KeyboardButtonProps","parseInt","r","developer","updated","handleDeveloperNameChange","IconButton","aria-label","todo","task","splice","handleRemoveDeveloper","faker","findName","withStyles","badge","right","top","border","Badge","addBusinessDays","count","ctr","nextDate","getItemStyle","draggableStyle","widthMultiplier","userSelect","boxShadow","textAlign","minWidth","maxWidth","background","getListStyle","isDraggingOver","minHeight","width","App","flexWrap","title","content","dialog","setDialog","openSettings","setOpenSettings","openNewTask","setOpenNewTask","rowContextValue","useMemo","linksContextValue","workingDatesContextValue","developmentDaysContextValue","previousRowNames","JSON","parse","localStorage","getItem","rowName","Provider","items","len","item","releaseDate","dateGroup","groupBy","html","Object","keys","sort","a","b","tasks","input","document","getElementById","html2canvas","allowTaint","scale","then","canvas","toBlob","blob","navigator","clipboard","write","ClipboardItem","setItem","stringify","Card","CardContent","onDragEnd","result","source","destination","destinationRowIndex","droppableId","sourceRowIndex","s","removed","total","indexOf","marginTop","StyledBadge","badgeContent","color","direction","droppableProvided","droppableSnapshot","ref","innerRef","droppableProps","draggableId","provided","draggableProps","dragHandleProps","CardHeader","subheader","textOverflow","overflow","whiteSpace","CardActions","disableSpacing","issueKey","issueSummary","linkedIssues","link","linkedIssuesByText","entries","issues","handleInfoClick","Chip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","enableAllPlugins","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","utils","DateFnsUtils"],"mappings":"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","file":"static/js/main.d1380c73.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { PropTypes } from 'prop-types';\nimport React from 'react';\n\nfunction ButtonMenu({ handleSettings, handleGenerateReport, takeScreenshot, handleNewTask }) {\n  return (\n    <>\n      <ButtonGroup disableElevation variant=\"contained\" style={{ marginBottom: '20px' }}>\n        <Button startIcon={<SettingsIcon />} onClick={handleSettings}>\n          Settings\n        </Button>\n        <Button startIcon={<NotesIcon />} onClick={handleGenerateReport}>\n          Text Report\n        </Button>\n        <Button startIcon={<PhotoCameraIcon />} onClick={takeScreenshot}>\n          Screenshot\n        </Button>\n        <Button startIcon={<AddIcon />} onClick={handleNewTask}>\n          Add Task\n        </Button>\n      </ButtonGroup>\n    </>\n  );\n}\n\nButtonMenu.propTypes = {\n  handleSettings: PropTypes.func,\n  handleGenerateReport: PropTypes.func,\n  takeScreenshot: PropTypes.func,\n  handleNewTask: PropTypes.func,\n};\n\nexport default ButtonMenu;\n","import { createContext } from 'react';\n\nexport default createContext({\n  links: [],\n  setLinks: () => {},\n});\n","import { createContext } from 'react';\n\nexport default createContext({\n  rows: [],\n  setRows: () => {},\n});\n","import { produce } from 'immer';\nimport { nanoid } from 'nanoid';\nimport React, { useContext } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport LinksContext from './LinksContext';\nimport RowContext from './RowContext';\n\nconst COLOR_TASK = '#cbdadb';\n\nconst ISSUE_KEY = 'Issue key';\nconst ISSUE_ID = 'Issue id';\nconst ISSUE_SUMMARY = 'Summary';\nconst ISSUE_PARENT_ID = 'Parent id';\nconst ISSUE_ESTIMATE = 'Σ Original Estimate';\nconst ISSUE_COMPONENTS = 'Components';\nconst ISSUE_LABELS = 'Labels';\nconst ISSUE_LINK_END_TO_START = 'Outward issue link (Gantt End to Start)';\nconst ISSUE_LINK_END_TO_END = 'Outward issue link (Gantt End to End)';\n\nconst COMPONENT_LOOKUP = {\n  'Back-End': 'be',\n  'Front-End': 'fe',\n  QA: 'qa',\n};\n\nconst LABEL_LOOKUP = {\n  technical_task: 'tech',\n};\n\nfunction CsvDropzone() {\n  const { rows, setRows } = useContext(RowContext);\n  const { links, setLinks } = useContext(LinksContext);\n\n  const handleOnDrop = csvRows => {\n    csvRows.pop();\n    const { data: csvHeaders } = csvRows.shift();\n    const issueKeyIndex = csvHeaders.findIndex(h => h === ISSUE_KEY);\n    const issueIdIndex = csvHeaders.findIndex(h => h === ISSUE_ID);\n    const issueSummaryIndex = csvHeaders.findIndex(h => h === ISSUE_SUMMARY);\n    const issueParentIdIndex = csvHeaders.findIndex(h => h === ISSUE_PARENT_ID);\n    const issueEstimateIndex = csvHeaders.findIndex(h => h === ISSUE_ESTIMATE);\n    const issueComponentsIndexes = csvHeaders.map((h, i) => (h === ISSUE_COMPONENTS ? i : '')).filter(String);\n    const issueLabelIndexes = csvHeaders.map((h, i) => (h === ISSUE_LABELS ? i : '')).filter(String);\n    const endToEndLinkedIndexes = csvHeaders.map((h, i) => (h === ISSUE_LINK_END_TO_END ? i : '')).filter(String);\n    const endToStartLinkedIndexes = csvHeaders.map((h, i) => (h === ISSUE_LINK_END_TO_START ? i : '')).filter(String);\n\n    const colorPalette = [\n      '#A8E6CF',\n      '#DCEDC1',\n      '#FFD3B6',\n      '#FFAAA5',\n      '#FF8B94',\n      '#5C4B51',\n      '#8CBEB2',\n      '#F2EBBF',\n      '#F3B562',\n      '#BEBF95',\n      '#8C2B59',\n      '#BEBF95',\n      '#F5EB67',\n      '#88F7E2',\n      '#FFFFCB',\n    ];\n    const backgroundColorPerParentIds = csvRows.reduce((acc, { data }) => {\n      const parentId = data[issueParentIdIndex];\n\n      if (parentId === '') {\n        return acc;\n      }\n\n      if (!acc[parentId]) {\n        acc[parentId] = COLOR_TASK;\n      } else if (acc[parentId] === COLOR_TASK) {\n        acc[parentId] = colorPalette.shift();\n      }\n\n      return acc;\n    }, {});\n\n    const updatedLinks = produce(links, draft => {\n      csvRows.forEach(({ data }) => {\n        endToEndLinkedIndexes.forEach(index => {\n          if (data[index] === '') {\n            return;\n          }\n\n          const existingLink = draft.find(d => d.key === data[issueKeyIndex]);\n\n          if (existingLink) {\n            return;\n          }\n\n          draft.push({\n            key: data[issueKeyIndex],\n            text: 'has to be finished together',\n            issue: data[index],\n          });\n\n          draft.push({\n            key: data[index],\n            text: 'has to be finished together',\n            issue: data[issueKeyIndex],\n          });\n        });\n\n        endToStartLinkedIndexes.forEach(index => {\n          if (data[index] === '') {\n            return;\n          }\n\n          const existingLink = draft.find(d => d.key === data[issueKeyIndex]);\n\n          if (existingLink) {\n            return;\n          }\n\n          draft.push({\n            key: data[issueKeyIndex],\n            text: 'has to be done before',\n            issue: data[index],\n          });\n\n          draft.push({\n            key: data[index],\n            text: 'has to be done after',\n            issue: data[issueKeyIndex],\n          });\n        });\n      });\n    });\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n      const taskBucket = draft[taskBucketRowIndex];\n\n      const prepareComponents = data => {\n        return issueComponentsIndexes.reduce((acc, curr) => {\n          const component = COMPONENT_LOOKUP[data[curr]];\n          if (!component) {\n            return acc;\n          }\n\n          acc.push(component);\n\n          return acc;\n        }, []);\n      };\n\n      const prepareLabels = data => {\n        return issueLabelIndexes.reduce((acc, curr) => {\n          const label = LABEL_LOOKUP[data[curr]];\n          if (!label) {\n            return acc;\n          }\n\n          acc.push(label);\n\n          return acc;\n        }, []);\n      };\n\n      csvRows.forEach(({ data }) => {\n        const id = data[issueIdIndex] || nanoid();\n        const key = data[issueKeyIndex] || nanoid();\n\n        const existingBucket = draft.find(d => d.list.find(l => l.key === key));\n        if (existingBucket) {\n          const existingTask = existingBucket.list.find(l => l.key === key);\n\n          existingTask.summary = data[issueSummaryIndex];\n          existingTask.estimate = data[issueEstimateIndex] / 28800;\n          existingTask.backgroundColor = backgroundColorPerParentIds[data[issueParentIdIndex]];\n          existingTask.components = prepareComponents(data);\n          existingTask.labels = prepareLabels(data);\n\n          return;\n        }\n\n        taskBucket.list.push({\n          id,\n          key,\n          placeholder: !id,\n          summary: data[issueSummaryIndex],\n          estimate: data[issueEstimateIndex] / 28800,\n          backgroundColor: backgroundColorPerParentIds[data[issueParentIdIndex]],\n          components: prepareComponents(data),\n          labels: prepareLabels(data),\n        });\n      });\n    });\n\n    setRows(updatedRows);\n    setLinks(updatedLinks);\n  };\n\n  const handleOnError = err => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  return (\n    <>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        style={{ dropArea: { margin: '20px' } }}\n        config={{}}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n    </>\n  );\n}\n\nexport default CsvDropzone;\n","import { createContext } from 'react';\n\nexport default createContext({\n  developmentDays: 10 * 0.6,\n  setDevelopmentDays: () => {},\n});\n","import Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport produce from 'immer';\nimport { nanoid } from 'nanoid';\nimport { PropTypes } from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport RowContext from './RowContext';\n\nconst EMPTY_NEW_TASK = {\n  key: '',\n  name: '',\n  placeholder: false,\n  estimate: '',\n};\n\nfunction NewTaskDialog({ onClose, open }) {\n  const [newTask, setNewTask] = useState(EMPTY_NEW_TASK);\n  const { rows, setRows } = useContext(RowContext);\n\n  useEffect(() => {\n    if (open === false) {\n      setNewTask(EMPTY_NEW_TASK);\n    }\n  }, [open]);\n\n  const handleNewTaskEstimateChange = (event, newValue) => {\n    setNewTask({\n      ...newTask,\n      estimate: newValue,\n    });\n  };\n\n  const handleNewTaskKeyChange = event => {\n    setNewTask({\n      ...newTask,\n      key: event.target.value,\n    });\n  };\n\n  const handleNewTaskPlaceholderChange = event => {\n    setNewTask({\n      ...newTask,\n      placeholder: event.target.checked,\n    });\n  };\n\n  const handleAddNewTask = () => {\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n\n      const taskBucket = draft[taskBucketRowIndex];\n\n      taskBucket.list.push({\n        id: nanoid(),\n        key: newTask.key,\n        placeholder: newTask.placeholder,\n        summary: '',\n        estimate: newTask.estimate,\n        backgroundColor: undefined,\n        components: [],\n        labels: [],\n      });\n    });\n\n    setRows(updatedRows);\n    onClose();\n  };\n\n  return (\n    <>\n      <Dialog onClose={onClose} open={open}>\n        <DialogTitle>New Task</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'grid', padding: '20px' }}>\n            <TextField\n              label=\"Key\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={newTask.key}\n              onChange={handleNewTaskKeyChange}\n            />\n            <FormControlLabel\n              label=\"Is Placeholder\"\n              control={<Checkbox checked={newTask.placeholder} onChange={handleNewTaskPlaceholderChange} />}\n            />\n            <Typography gutterBottom>Estimate</Typography>\n            <Slider\n              value={newTask.estimate}\n              onChange={handleNewTaskEstimateChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.5}\n              marks\n              min={0.0}\n              max={6}\n            />\n            <Button startIcon={<AddIcon />} onClick={handleAddNewTask}>\n              Add Task\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nNewTaskDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default NewTaskDialog;\n","import { createContext } from 'react';\n\nexport default createContext({\n  workingDates: [],\n  setWorkingDates: () => {},\n});\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport addDays from 'date-fns/addDays';\nimport isWeekend from 'date-fns/isWeekend';\nimport faker from 'faker';\nimport { produce } from 'immer';\nimport { nanoid } from 'nanoid';\nimport { PropTypes } from 'prop-types';\nimport React, { useState, useEffect, useContext } from 'react';\nimport DevelopmentDaysContext from './DevelopmentDaysContext';\nimport RowContext from './RowContext';\nimport WorkingDatesContext from './WorkingDatesContext';\n\nconst calculateWorkingDates = (startDate, sprintDays) => {\n  let loop = true;\n  let counter = 0;\n  const workingDates = [];\n  while (loop) {\n    const date = addDays(startDate, counter);\n\n    if (!isWeekend(date)) {\n      workingDates.push(date);\n    }\n\n    counter += 1;\n    if (workingDates.length >= sprintDays) {\n      loop = false;\n    }\n  }\n\n  return workingDates;\n};\n\nfunction SettingsDialog({ onClose, open }) {\n  const [startDate, setStartDate] = useState(new Date());\n  const [sprintDays, setSprintDays] = useState(10);\n  const [developmentRatio, setDevelopmentRatio] = useState(0.6);\n  const { rows, setRows } = useContext(RowContext);\n  const { setWorkingDates } = useContext(WorkingDatesContext);\n  const { setDevelopmentDays } = useContext(DevelopmentDaysContext);\n\n  useEffect(() => {\n    setWorkingDates(calculateWorkingDates(startDate, sprintDays));\n  }, [startDate, sprintDays]);\n\n  useEffect(() => {\n    setDevelopmentDays(sprintDays * developmentRatio);\n  }, [sprintDays, developmentRatio]);\n\n  const handleSprintDaysChange = event => {\n    setSprintDays(parseInt(event.target.value, 10));\n  };\n\n  const handleDevelopmentRatioChange = (event, newValue) => {\n    setDevelopmentRatio(newValue);\n  };\n\n  const handleAddDeveloper = () => {\n    const updated = produce(rows, draft => {\n      draft.splice(rows.length - 1, 0, { id: nanoid(), name: faker.name.findName(), developer: true, list: [] });\n    });\n\n    setRows(updated);\n  };\n\n  const handleRemoveDeveloper = id => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(todo => todo.id === id);\n      if (index !== -1) {\n        const taskBucket = draft.find(row => row.name === 'Task Bucket');\n\n        // eslint-disable-next-line security/detect-object-injection\n        const row = draft[index];\n\n        row.list.forEach(task => taskBucket.list.push(task));\n\n        draft.splice(index, 1);\n      }\n    });\n\n    setRows(updated);\n  };\n\n  const handleDeveloperNameChange = (id, value) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(row => row.id === id);\n      // eslint-disable-next-line no-param-reassign\n      draft[index].name = value;\n    });\n\n    setRows(updated);\n  };\n\n  return (\n    <>\n      <Dialog onClose={onClose} open={open}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'grid', padding: '20px' }}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Select start date\"\n              format=\"MM/dd/yyyy\"\n              value={startDate}\n              onChange={setStartDate}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <TextField\n              label=\"Sprint Days\"\n              variant=\"outlined\"\n              type=\"number\"\n              value={sprintDays}\n              onChange={handleSprintDaysChange}\n            />\n            <Typography gutterBottom>Development Ratio</Typography>\n            <Slider\n              value={developmentRatio}\n              onChange={handleDevelopmentRatioChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.1}\n              marks\n              min={0.1}\n              max={1}\n            />\n            <Typography gutterBottom>Developers</Typography>\n            {rows\n              .filter(r => !!r.developer)\n              .map(row => {\n                return (\n                  <div key={row.id} style={{ display: 'flex' }}>\n                    <TextField\n                      variant=\"outlined\"\n                      value={row.name}\n                      onChange={event => {\n                        handleDeveloperNameChange(row.id, event.target.value);\n                      }}\n                    />\n                    <IconButton\n                      aria-label=\"remove\"\n                      onClick={() => {\n                        handleRemoveDeveloper(row.id);\n                      }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  </div>\n                );\n              })}\n            <Button startIcon={<AddIcon />} onClick={handleAddDeveloper}>\n              Add Developer\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default SettingsDialog;\n","import Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport default withStyles(() => ({\n  badge: {\n    right: 18,\n    top: 13,\n    border: `2px solid black`,\n    padding: '0 4px',\n  },\n}))(Badge);\n","import Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InfoIcon from '@material-ui/icons/Info';\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport isWeekend from 'date-fns/isWeekend';\nimport html2canvas from 'html2canvas';\nimport { produce } from 'immer';\nimport groupBy from 'lodash/groupBy';\nimport { nanoid } from 'nanoid';\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\nimport ButtonMenu from './ButtonMenu';\nimport CsvDropzone from './CsvDropzone';\nimport DevelopmentDaysContext from './DevelopmentDaysContext';\nimport LinksContext from './LinksContext';\nimport NewTaskDialog from './NewTaskDialog';\nimport RowContext from './RowContext';\nimport SettingsDialog from './SettingsDialog';\nimport StyledBadge from './StyledBadge';\nimport WorkingDatesContext from './WorkingDatesContext';\n\nconst COLOR_TASK = '#cbdadb';\nconst COLOR_DEV_DATE = '#99B898';\nconst COLOR_DATE = '#f8fbff';\nconst COLOR_ASSIGNEE = '#f8fbff';\n\nconst addBusinessDays = (date, count) => {\n  let ctr = 1;\n  let nextDate = date;\n\n  while (ctr <= count) {\n    nextDate = addDays(nextDate, 1);\n\n    if (!isWeekend(nextDate)) {\n      ctr += 1;\n    }\n  }\n\n  return nextDate;\n};\n\nconst getItemStyle = (draggableStyle = {}, backgroundColor = COLOR_TASK, widthMultiplier = 0.5) => ({\n  // some basic styles to make the jiras look a bit nicer\n  userSelect: 'none',\n  padding: '0 0 0 0',\n  margin: 0,\n  boxShadow: '#302828 0px 0px 2px 0px inset',\n  textAlign: 'center',\n  minWidth: 100 * widthMultiplier,\n  maxWidth: 100 * widthMultiplier,\n  display: 'grid',\n\n  // change background colour if dragging\n  background: backgroundColor,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, style = {}) => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  display: 'flex',\n  padding: 8,\n  minHeight: 36,\n  margin: '0 0 0 10px',\n  width: '100%',\n  ...style,\n});\n\nfunction App() {\n  const [rows, setRows] = useState([\n    {\n      id: nanoid(),\n      name: 'Task Bucket',\n      developer: false,\n      list: [],\n      style: { flexWrap: 'wrap' },\n    },\n  ]);\n  const [links, setLinks] = useState([]);\n  const [dialog, setDialog] = useState({ open: false, title: '', content: '' });\n  const [workingDates, setWorkingDates] = useState([]);\n  const [developmentDays, setDevelopmentDays] = useState(10 * 0.6);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [openNewTask, setOpenNewTask] = useState(false);\n\n  const rowContextValue = useMemo(() => ({ rows, setRows }), [rows]);\n  const linksContextValue = useMemo(() => ({ links, setLinks }), [links]);\n  const workingDatesContextValue = useMemo(() => ({ workingDates, setWorkingDates }), [workingDates]);\n  const developmentDaysContextValue = useMemo(() => ({ developmentDays, setDevelopmentDays }), [developmentDays]);\n\n  useEffect(() => {\n    const previousRowNames = JSON.parse(localStorage.getItem('rows') || '[]');\n\n    if (previousRowNames && previousRowNames.length > 0) {\n      const updated = produce(rows, draft => {\n        previousRowNames.forEach(rowName => {\n          const existing = draft.find(d => d.name === rowName);\n\n          if (existing) {\n            return;\n          }\n\n          draft.splice(rows.length - 1, 0, { id: nanoid(), name: rowName, developer: true, list: [] });\n        });\n      });\n\n      setRows(updated);\n    }\n  }, []);\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    const updated = produce(rows, draft => {\n      const destinationRowIndex = draft.findIndex(row => row.id === destination.droppableId);\n      const sourceRowIndex = draft.findIndex(row => row.id === source.droppableId);\n\n      const s = draft[sourceRowIndex];\n      const d = draft[destinationRowIndex];\n\n      const [removed] = s.list.splice(source.index, 1);\n      d.list.splice(destination.index, 0, removed);\n    });\n\n    setRows(updated);\n  };\n\n  const handleInfoClick = (issueKey, issueSummary) => {\n    const linkedIssues = links.filter(link => link.key === issueKey);\n\n    const linkedIssuesByText = groupBy(linkedIssues, 'text');\n    setDialog({\n      open: true,\n      title: issueKey,\n      content: (\n        <>\n          <Typography variant=\"body1\" gutterBottom>\n            {issueSummary}\n          </Typography>\n          {linkedIssues.length > 0 && (\n            <>\n              {Object.entries(linkedIssuesByText).map(([key, issues]) => {\n                return (\n                  <>\n                    <Typography variant=\"subtitle1\">{key}:</Typography>\n                    {issues.map(link => (\n                      <Typography key={link.issue} variant=\"subtitle2\">\n                        {link.issue}\n                      </Typography>\n                    ))}\n                  </>\n                );\n              })}\n            </>\n          )}\n        </>\n      ),\n    });\n  };\n\n  const handleDialogClose = () => {\n    setDialog({\n      open: false,\n      title: '',\n      content: '',\n    });\n  };\n\n  const handleGenerateReport = () => {\n    const items = rows\n      .filter(r => r.name !== 'Task Bucket')\n      .reduce((acc, row) => {\n        for (let i = 0, len = row.list.length; i < len; i++) {\n          let date;\n          if (i === 0) {\n            [date] = workingDates;\n          } else {\n            date = acc.find(item => item.id === row.list[i - 1].id).releaseDate;\n          }\n\n          const item = row.list[i];\n\n          if (!item.placeholder) {\n            acc.push({\n              id: item.id,\n              key: item.key,\n              releaseDate: addBusinessDays(date, item.estimate),\n            });\n          }\n        }\n\n        return acc;\n      }, []);\n\n    const dateGroup = groupBy(items, 'releaseDate');\n\n    const html = Object.keys(dateGroup)\n      .sort((a, b) => new Date(a) - new Date(b))\n      .map(date => {\n        const tasks = dateGroup[date].filter(task => !task.placeholder);\n\n        return (\n          <>\n            <span>{format(new Date(date), 'do MMM')}:</span>\n            <ol>\n              {tasks.map(task => (\n                <li key={task.key}>{`https://altayerdigital.atlassian.net/browse/${task.key}`}</li>\n              ))}\n            </ol>\n          </>\n        );\n      });\n\n    setDialog({\n      open: true,\n      title: 'Task Grouped By Release Date',\n      content: html,\n    });\n  };\n\n  const takeScreenshot = () => {\n    const input = document.getElementById('screenshot');\n    html2canvas(input, {\n      backgroundColor: null,\n      allowTaint: true,\n      scale: 2,\n    }).then(canvas => {\n      // eslint-disable-next-line no-undef\n      canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({ 'image/png': blob })]));\n\n      setDialog({\n        open: true,\n        title: 'Screenshot copied to clipboard',\n      });\n    });\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(true);\n  };\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n\n    localStorage.setItem('rows', JSON.stringify(rows.filter(r => r.name !== 'Task Bucket').map(r => r.name)));\n  };\n\n  const handleNewTask = () => {\n    setOpenNewTask(true);\n  };\n\n  const handleNewTaskClose = () => {\n    setOpenNewTask(false);\n  };\n\n  return (\n    <>\n      <LinksContext.Provider value={linksContextValue}>\n        <RowContext.Provider value={rowContextValue}>\n          <CsvDropzone />\n        </RowContext.Provider>\n      </LinksContext.Provider>\n      <ButtonMenu\n        handleSettings={handleSettings}\n        handleGenerateReport={handleGenerateReport}\n        takeScreenshot={takeScreenshot}\n        handleNewTask={handleNewTask}\n      />\n      <Dialog onClose={handleDialogClose} open={dialog.open}>\n        <DialogTitle>{dialog.title}</DialogTitle>\n        <DialogContent>{dialog.content}</DialogContent>\n      </Dialog>\n      <WorkingDatesContext.Provider value={workingDatesContextValue}>\n        <DevelopmentDaysContext.Provider value={developmentDaysContextValue}>\n          <RowContext.Provider value={rowContextValue}>\n            <SettingsDialog onClose={handleSettingsClose} open={openSettings} />\n          </RowContext.Provider>\n        </DevelopmentDaysContext.Provider>\n      </WorkingDatesContext.Provider>\n      <RowContext.Provider value={rowContextValue}>\n        <NewTaskDialog onClose={handleNewTaskClose} open={openNewTask} />\n      </RowContext.Provider>\n      <div style={{ width: 'fit-content' }} id=\"screenshot\">\n        <div style={{ display: 'flex' }}>\n          <div style={{ minWidth: 180, minHeight: '50px' }}></div>\n          <Card style={getListStyle()}>\n            {workingDates.map((date, i) => (\n              <CardContent key={date} style={getItemStyle({}, i < developmentDays ? COLOR_DEV_DATE : COLOR_DATE, 1)}>\n                {format(date, 'do MMM')}\n              </CardContent>\n            ))}\n          </Card>\n        </div>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {rows.map(row => {\n            const total = row.list\n              .filter(i => i.labels.indexOf('tech') === -1)\n              .reduce((acc, curr) => acc + (curr.placeholder ? 0 : curr.estimate), 0);\n\n            return (\n              <div key={row.id} style={{ display: 'flex', marginTop: '10px' }}>\n                <StyledBadge badgeContent={total} color={total > developmentDays ? 'error' : 'primary'}>\n                  <Card style={{ minWidth: 180, background: COLOR_ASSIGNEE }}>\n                    <CardContent>{row.name}</CardContent>\n                  </Card>\n                </StyledBadge>\n                <Droppable droppableId={row.id} direction=\"horizontal\">\n                  {(droppableProvided, droppableSnapshot) => (\n                    <div\n                      ref={droppableProvided.innerRef}\n                      style={getListStyle(droppableSnapshot.isDraggingOver, row.style)}\n                      {...droppableProvided.droppableProps}\n                    >\n                      {row.list.map((item, index) => (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {provided => (\n                            <StyledBadge badgeContent={item.placeholder ? null : item.estimate} color=\"primary\">\n                              <Card\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={getItemStyle(provided.draggableProps.style, item.backgroundColor, item.estimate)}\n                              >\n                                <CardHeader\n                                  subheader={item.placeholder ? '' : item.key}\n                                  style={{ maxWidth: `${100 * item.estimate}px`, padding: '16px 4px 0 4px' }}\n                                />\n                                <CardContent style={{ maxWidth: `${100 * item.estimate}px`, padding: '0 4px 0 4px' }}>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                    style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n                                  >\n                                    {item.summary}\n                                  </Typography>\n                                </CardContent>\n                                <CardActions\n                                  disableSpacing\n                                  style={{ maxWidth: `${100 * item.estimate}px`, padding: '0 4px 0 4px' }}\n                                >\n                                  {!item.placeholder && (\n                                    <IconButton\n                                      aria-label=\"add to favorites\"\n                                      onClick={() => {\n                                        handleInfoClick(item.key, item.summary);\n                                      }}\n                                    >\n                                      <InfoIcon />\n                                    </IconButton>\n                                  )}\n                                  {!item.placeholder &&\n                                    [...item.components, ...item.labels].map(component => (\n                                      <Chip key={`${item.id}:${component}`} label={component} variant=\"outlined\" />\n                                    ))}\n                                </CardActions>\n                              </Card>\n                            </StyledBadge>\n                          )}\n                        </Draggable>\n                      ))}\n                      {droppableProvided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import DateFnsUtils from '@date-io/date-fns';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { enableAllPlugins } from 'immer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}