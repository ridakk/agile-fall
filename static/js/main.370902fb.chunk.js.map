{"version":3,"sources":["App.js","reportWebVitals.js","theme.js","index.js"],"names":["COLOR_TASK","isWeekDay","date","isWeekend","addBusinessDays","count","ctr","nextDate","addDays","getItemStyle","draggableStyle","backgroundColor","widthMultiplier","userSelect","padding","margin","boxShadow","textAlign","minWidth","maxWidth","display","background","getListStyle","isDraggingOver","style","minHeight","width","StyledBadge","withStyles","badge","right","top","border","Badge","COMPONENT_LOOKUP","QA","LABEL_LOOKUP","technical_task","EMPTY_NEW_TASK","key","name","placeholder","estimate","App","useState","id","nanoid","developer","list","flexWrap","rows","setRows","links","setLinks","open","title","content","dialog","setDialog","workingDates","setWorkingDates","Date","startDate","setStartDate","sprintDays","setSprintDays","developmentRatio","setDevelopmentRatio","developmentDays","setDevelopmentDays","openSettings","setOpenSettings","openNewTask","setOpenNewTask","newTask","setNewTask","useEffect","loop","counter","push","length","calculateWorkingDates","handleNewTaskClose","onDrop","csvRows","pop","csvHeaders","shift","data","issueKeyIndex","findIndex","h","issueIdIndex","issueSummaryIndex","issueParentIdIndex","issueEstimateIndex","issueComponentsIndexes","map","i","filter","String","issueLabelIndexes","endToEndLinkedIndexes","endToStartLinkedIndexes","colorPalette","backgroundColorPerParentIds","reduce","acc","parentId","updatedLinks","produce","draft","forEach","index","text","issue","updatedRows","taskBucketRowIndex","row","taskBucket","summary","components","curr","component","labels","label","onError","err","console","log","dropArea","config","addRemoveButton","onRemoveFile","ButtonGroup","disableElevation","variant","marginBottom","Button","startIcon","onClick","items","len","find","item","releaseDate","dateGroup","groupBy","html","Object","keys","sort","a","b","tasks","task","format","input","document","getElementById","html2canvas","allowTaint","scale","then","canvas","toBlob","blob","navigator","clipboard","write","ClipboardItem","Dialog","onClose","DialogTitle","DialogContent","value","onChange","KeyboardButtonProps","TextField","type","event","parseInt","target","Typography","gutterBottom","Slider","newValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","r","updated","handleDeveloperNameChange","IconButton","aria-label","todo","splice","handleRemoveDeveloper","faker","findName","FormControlLabel","control","Checkbox","checked","undefined","Card","CardContent","onDragEnd","result","source","destination","destinationRowIndex","droppableId","sourceRowIndex","s","d","removed","total","indexOf","marginTop","badgeContent","color","direction","droppableProvided","droppableSnapshot","ref","innerRef","droppableProps","draggableId","provided","draggableProps","dragHandleProps","CardHeader","subheader","textOverflow","overflow","whiteSpace","CardActions","disableSpacing","issueKey","issueSummary","linkedIssues","link","linkedIssuesByText","entries","issues","handleInfoClick","Chip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","enableAllPlugins","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","utils","DateFnsUtils"],"mappings":"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","file":"static/js/main.370902fb.chunk.js","sourcesContent":["import Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport isWeekend from 'date-fns/isWeekend';\nimport faker from 'faker';\nimport html2canvas from 'html2canvas';\nimport { produce } from 'immer';\nimport groupBy from 'lodash/groupBy';\nimport { nanoid } from 'nanoid';\nimport React, { useState, useEffect } from 'react';\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { CSVReader } from 'react-papaparse';\nimport './App.css';\n\nconst COLOR_TASK = '#cbdadb';\nconst COLOR_DEV_DATE = '#99B898';\nconst COLOR_DATE = '#f8fbff';\nconst COLOR_ASSIGNEE = '#f8fbff';\nconst COLOR_1 = '#a8e6cf';\nconst COLOR_2 = '#dcedc1';\nconst COLOR_3 = '#ffd3b6';\nconst COLOR_4 = '#ffaaa5';\nconst COLOR_5 = '#ff8b94';\nconst ISSUE_KEY = 'Issue key';\nconst ISSUE_ID = 'Issue id';\nconst ISSUE_SUMMARY = 'Summary';\nconst ISSUE_PARENT_ID = 'Parent id';\nconst ISSUE_ESTIMATE = 'Σ Original Estimate';\nconst ISSUE_COMPONENTS = 'Components';\nconst ISSUE_LABELS = 'Labels';\nconst ISSUE_LINK_END_TO_START = 'Outward issue link (Gantt End to Start)';\nconst ISSUE_LINK_END_TO_END = 'Outward issue link (Gantt End to End)';\n\nconst isWeekDay = date => {\n  return !isWeekend(date);\n};\n\nconst addBusinessDays = (date, count) => {\n  let ctr = 1;\n  let nextDate = date;\n\n  while (ctr <= count) {\n    nextDate = addDays(nextDate, 1);\n\n    if (isWeekDay(nextDate)) {\n      ctr += 1;\n    }\n  }\n\n  return nextDate;\n};\n\nconst calculateWorkingDates = (startDate, sprintDays) => {\n  let loop = true;\n  let counter = 0;\n  const workingDates = [];\n  while (loop) {\n    const date = addDays(startDate, counter);\n\n    if (isWeekDay(date)) {\n      workingDates.push(date);\n    }\n\n    counter += 1;\n    if (workingDates.length >= sprintDays) {\n      loop = false;\n    }\n  }\n\n  return workingDates;\n};\n\nconst getItemStyle = (draggableStyle = {}, backgroundColor = COLOR_TASK, widthMultiplier = 0.5) => ({\n  // some basic styles to make the jiras look a bit nicer\n  userSelect: 'none',\n  padding: '0 0 0 0',\n  margin: 0,\n  boxShadow: '#302828 0px 0px 2px 0px inset',\n  textAlign: 'center',\n  minWidth: 100 * widthMultiplier,\n  maxWidth: 100 * widthMultiplier,\n  display: 'grid',\n\n  // change background colour if dragging\n  background: backgroundColor,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, style = {}) => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  display: 'flex',\n  padding: 8,\n  minHeight: 36,\n  margin: '0 0 0 10px',\n  width: '100%',\n  ...style,\n});\n\nconst StyledBadge = withStyles(() => ({\n  badge: {\n    right: 18,\n    top: 13,\n    border: `2px solid black`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\nconst COMPONENT_LOOKUP = {\n  'Back-End': 'be',\n  'Front-End': 'fe',\n  QA: 'qa',\n};\n\nconst LABEL_LOOKUP = {\n  technical_task: 'tech',\n};\n\nconst EMPTY_NEW_TASK = {\n  key: '',\n  name: '',\n  placeholder: false,\n  estimate: '',\n};\n\nfunction App() {\n  const [rows, setRows] = useState([\n    {\n      id: nanoid(),\n      name: 'Task Bucket',\n      developer: false,\n      list: [],\n      style: { flexWrap: 'wrap' },\n    },\n  ]);\n  const [links, setLinks] = useState([]);\n  const [dialog, setDialog] = useState({ open: false, title: '', content: '' });\n  const [workingDates, setWorkingDates] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [sprintDays, setSprintDays] = useState(10);\n  const [developmentRatio, setDevelopmentRatio] = useState(0.6);\n  const [developmentDays, setDevelopmentDays] = useState(sprintDays * developmentRatio);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [openNewTask, setOpenNewTask] = useState(false);\n  const [newTask, setNewTask] = useState(EMPTY_NEW_TASK);\n\n  useEffect(() => {\n    setWorkingDates(calculateWorkingDates(startDate, sprintDays));\n  }, [startDate, sprintDays]);\n\n  useEffect(() => {\n    setDevelopmentDays(sprintDays * developmentRatio);\n  }, [sprintDays, developmentRatio]);\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    const updated = produce(rows, draft => {\n      const destinationRowIndex = draft.findIndex(row => row.name === destination.droppableId);\n      const sourceRowIndex = draft.findIndex(row => row.name === source.droppableId);\n\n      const s = draft[sourceRowIndex];\n      const d = draft[destinationRowIndex];\n\n      const [removed] = s.list.splice(source.index, 1);\n      d.list.splice(destination.index, 0, removed);\n    });\n\n    setRows(updated);\n  };\n\n  const handleOnDrop = csvRows => {\n    csvRows.pop();\n    const { data: csvHeaders } = csvRows.shift();\n    const issueKeyIndex = csvHeaders.findIndex(h => h === ISSUE_KEY);\n    const issueIdIndex = csvHeaders.findIndex(h => h === ISSUE_ID);\n    const issueSummaryIndex = csvHeaders.findIndex(h => h === ISSUE_SUMMARY);\n    const issueParentIdIndex = csvHeaders.findIndex(h => h === ISSUE_PARENT_ID);\n    const issueEstimateIndex = csvHeaders.findIndex(h => h === ISSUE_ESTIMATE);\n    const issueComponentsIndexes = csvHeaders.map((h, i) => (h === ISSUE_COMPONENTS ? i : '')).filter(String);\n    const issueLabelIndexes = csvHeaders.map((h, i) => (h === ISSUE_LABELS ? i : '')).filter(String);\n    const endToEndLinkedIndexes = csvHeaders.map((h, i) => (h === ISSUE_LINK_END_TO_END ? i : '')).filter(String);\n    const endToStartLinkedIndexes = csvHeaders.map((h, i) => (h === ISSUE_LINK_END_TO_START ? i : '')).filter(String);\n\n    const colorPalette = [COLOR_1, COLOR_2, COLOR_3, COLOR_4, COLOR_5];\n    const backgroundColorPerParentIds = csvRows.reduce((acc, { data }) => {\n      const parentId = data[issueParentIdIndex];\n\n      if (parentId === '') {\n        return acc;\n      }\n\n      if (!acc[parentId]) {\n        acc[parentId] = COLOR_TASK;\n      } else if (acc[parentId] === COLOR_TASK) {\n        acc[parentId] = colorPalette.shift();\n      }\n\n      return acc;\n    }, {});\n\n    const updatedLinks = produce(links, draft => {\n      csvRows.forEach(({ data }) => {\n        endToEndLinkedIndexes.forEach(index => {\n          if (data[index] !== '') {\n            draft.push({\n              key: data[issueKeyIndex],\n              text: 'has to be finished together',\n              issue: data[index],\n            });\n\n            draft.push({\n              key: data[index],\n              text: 'has to be finished together',\n              issue: data[issueKeyIndex],\n            });\n          }\n        });\n\n        endToStartLinkedIndexes.forEach(index => {\n          if (data[index] !== '') {\n            draft.push({\n              key: data[issueKeyIndex],\n              text: 'has to be done before',\n              issue: data[index],\n            });\n\n            draft.push({\n              key: data[index],\n              text: 'has to be done after',\n              issue: data[issueKeyIndex],\n            });\n          }\n        });\n      });\n    });\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n\n      const taskBucket = draft[taskBucketRowIndex];\n\n      csvRows.forEach(({ data }) => {\n        const id = data[issueIdIndex];\n        taskBucket.list.push({\n          id: id || nanoid(),\n          key: data[issueKeyIndex] || nanoid(),\n          placeholder: !id,\n          summary: data[issueSummaryIndex],\n          estimate: data[issueEstimateIndex] / 28800,\n          backgroundColor: backgroundColorPerParentIds[data[issueParentIdIndex]],\n          components: issueComponentsIndexes.reduce((acc, curr) => {\n            const component = COMPONENT_LOOKUP[data[curr]];\n            if (!component) {\n              return acc;\n            }\n\n            acc.push(component);\n\n            return acc;\n          }, []),\n          labels: issueLabelIndexes.reduce((acc, curr) => {\n            const label = LABEL_LOOKUP[data[curr]];\n            if (!label) {\n              return acc;\n            }\n\n            acc.push(label);\n\n            return acc;\n          }, []),\n        });\n      });\n    });\n\n    setRows(updatedRows);\n    setLinks(updatedLinks);\n  };\n\n  const handleOnError = err => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  const handleInfoClick = (issueKey, issueSummary) => {\n    const linkedIssues = links.filter(link => link.key === issueKey);\n\n    const linkedIssuesByText = groupBy(linkedIssues, 'text');\n    setDialog({\n      open: true,\n      title: issueKey,\n      content: (\n        <>\n          <Typography variant=\"body1\" gutterBottom>\n            {issueSummary}\n          </Typography>\n          {linkedIssues.length > 0 && (\n            <>\n              {Object.entries(linkedIssuesByText).map(([key, issues]) => {\n                return (\n                  <>\n                    <Typography variant=\"subtitle1\">{key}:</Typography>\n                    {issues.map(link => (\n                      <Typography key={link.issue} variant=\"subtitle2\">\n                        {link.issue}\n                      </Typography>\n                    ))}\n                  </>\n                );\n              })}\n            </>\n          )}\n        </>\n      ),\n    });\n  };\n\n  const handleDialogClose = () => {\n    setDialog({\n      open: false,\n      title: '',\n      content: '',\n    });\n  };\n\n  const handleGenerateReport = () => {\n    const items = rows.reduce((acc, row) => {\n      for (let i = 0, len = row.list.length; i < len; i++) {\n        let date;\n        if (i === 0) {\n          [date] = workingDates;\n        } else {\n          date = acc.find(item => item.id === row.list[i - 1].id).releaseDate;\n        }\n\n        const item = row.list[i];\n        acc.push({\n          id: item.id,\n          key: item.key,\n          releaseDate: addBusinessDays(date, item.estimate),\n        });\n      }\n\n      return acc;\n    }, []);\n\n    const dateGroup = groupBy(items, 'releaseDate');\n\n    const html = Object.keys(dateGroup)\n      .sort((a, b) => new Date(a) - new Date(b))\n      .map(date => {\n        const tasks = dateGroup[date].filter(task => !task.placeholder);\n\n        return (\n          <>\n            <span>{format(new Date(date), 'do MMM')}:</span>\n            <ol>\n              {tasks.map(task => (\n                <li key={task.key}>{`https://altayerdigital.atlassian.net/browse/${task.key}`}</li>\n              ))}\n            </ol>\n          </>\n        );\n      });\n\n    setDialog({\n      open: true,\n      title: 'Task Grouped By Release Date',\n      content: html,\n    });\n  };\n\n  const takeScreenshot = () => {\n    const input = document.getElementById('screenshot');\n    html2canvas(input, {\n      backgroundColor: null,\n      allowTaint: true,\n      scale: 2,\n    }).then(canvas => {\n      // eslint-disable-next-line no-undef\n      canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({ 'image/png': blob })]));\n\n      setDialog({\n        open: true,\n        title: 'Screenshot copied to clipboard',\n      });\n    });\n  };\n\n  const handleSprintDaysChange = event => {\n    setSprintDays(parseInt(event.target.value, 10));\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(true);\n  };\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n  };\n\n  const handleDevelopmentRatioChange = (event, newValue) => {\n    setDevelopmentRatio(newValue);\n  };\n\n  const handleNewTask = () => {\n    setOpenNewTask(true);\n  };\n\n  const handleNewTaskClose = () => {\n    setOpenNewTask(false);\n    setNewTask(EMPTY_NEW_TASK);\n  };\n\n  const handleNewTaskEstimateChange = (event, newValue) => {\n    setNewTask({\n      ...newTask,\n      estimate: newValue,\n    });\n  };\n\n  const handleNewTaskKeyChange = event => {\n    setNewTask({\n      ...newTask,\n      key: event.target.value,\n    });\n  };\n\n  const handleNewTaskPlaceholderChange = event => {\n    setNewTask({\n      ...newTask,\n      placeholder: event.target.checked,\n    });\n  };\n\n  const handleAddNewTask = () => {\n    console.log(newTask);\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n\n      const taskBucket = draft[taskBucketRowIndex];\n\n      taskBucket.list.push({\n        id: nanoid(),\n        key: newTask.key,\n        placeholder: newTask.placeholder,\n        summary: '',\n        estimate: newTask.estimate,\n        backgroundColor: undefined,\n        components: [],\n        labels: [],\n      });\n    });\n\n    setRows(updatedRows);\n    handleNewTaskClose();\n  };\n\n  const handleAddDeveloper = () => {\n    const updated = produce(rows, draft => {\n      draft.splice(rows.length - 1, 0, { id: nanoid(), name: faker.name.findName(), developer: true, list: [] });\n    });\n\n    setRows(updated);\n  };\n\n  const handleRemoveDeveloper = id => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(todo => todo.id === id);\n      if (index !== -1) {\n        draft.splice(index, 1);\n      }\n    });\n\n    setRows(updated);\n  };\n\n  const handleDeveloperNameChange = (id, value) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(row => row.id === id);\n      // eslint-disable-next-line no-param-reassign\n      draft[index].name = value;\n    });\n\n    setRows(updated);\n  };\n\n  return (\n    <>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        style={{ dropArea: { margin: '20px' } }}\n        config={{}}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n      <ButtonGroup disableElevation variant=\"contained\" style={{ marginBottom: '20px' }}>\n        <Button startIcon={<SettingsIcon />} onClick={handleSettings}>\n          Settings\n        </Button>\n        <Button startIcon={<NotesIcon />} onClick={handleGenerateReport}>\n          Text Report\n        </Button>\n        <Button startIcon={<PhotoCameraIcon />} onClick={takeScreenshot}>\n          Screenshot\n        </Button>\n        <Button startIcon={<AddIcon />} onClick={handleNewTask}>\n          Add Task\n        </Button>\n      </ButtonGroup>\n      <Dialog onClose={handleDialogClose} open={dialog.open}>\n        <DialogTitle>{dialog.title}</DialogTitle>\n        <DialogContent>{dialog.content}</DialogContent>\n      </Dialog>\n      <Dialog onClose={handleSettingsClose} open={openSettings}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'grid', padding: '20px' }}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Select start date\"\n              format=\"MM/dd/yyyy\"\n              value={startDate}\n              onChange={setStartDate}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <TextField\n              label=\"Sprint Days\"\n              variant=\"outlined\"\n              type=\"number\"\n              value={sprintDays}\n              onChange={handleSprintDaysChange}\n            />\n            <Typography gutterBottom>Development Ratio</Typography>\n            <Slider\n              value={developmentRatio}\n              onChange={handleDevelopmentRatioChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.1}\n              marks\n              min={0.1}\n              max={1}\n            />\n            <Typography gutterBottom>Developers</Typography>\n            {rows\n              .filter(r => !!r.developer)\n              .map(row => {\n                return (\n                  <div key={row.id} style={{ display: 'flex' }}>\n                    <TextField\n                      variant=\"outlined\"\n                      value={row.name}\n                      onChange={event => {\n                        handleDeveloperNameChange(row.id, event.target.value);\n                      }}\n                    />\n                    <IconButton\n                      aria-label=\"remove\"\n                      onClick={() => {\n                        handleRemoveDeveloper(row.id);\n                      }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  </div>\n                );\n              })}\n            <Button startIcon={<AddIcon />} onClick={handleAddDeveloper}>\n              Add Developer\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <Dialog onClose={handleNewTaskClose} open={openNewTask}>\n        <DialogTitle>New Task</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'grid', padding: '20px' }}>\n            <TextField\n              label=\"Key\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={newTask.key}\n              onChange={handleNewTaskKeyChange}\n            />\n            <FormControlLabel\n              label=\"Is Placeholder\"\n              control={<Checkbox checked={newTask.placeholder} onChange={handleNewTaskPlaceholderChange} />}\n            />\n            <Typography gutterBottom>Estimate</Typography>\n            <Slider\n              value={newTask.estimate}\n              onChange={handleNewTaskEstimateChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.5}\n              marks\n              min={0.0}\n              max={6}\n            />\n            <Button startIcon={<AddIcon />} onClick={handleAddNewTask}>\n              Add Task\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n      <div style={{ width: 'fit-content' }} id=\"screenshot\">\n        <div style={{ display: 'flex' }}>\n          <div style={{ minWidth: 180, minHeight: '50px' }}></div>\n          <Card style={getListStyle()}>\n            {workingDates.map((date, i) => (\n              <CardContent key={date} style={getItemStyle({}, i < developmentDays ? COLOR_DEV_DATE : COLOR_DATE, 1)}>\n                {format(date, 'do MMM')}\n              </CardContent>\n            ))}\n          </Card>\n        </div>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {rows.map(row => {\n            const total = row.list\n              .filter(i => i.labels.indexOf('tech') === -1)\n              .reduce((acc, curr) => acc + (curr.placeholder ? 0 : curr.estimate), 0);\n\n            return (\n              <div key={row.name} style={{ display: 'flex', marginTop: '10px' }}>\n                <StyledBadge badgeContent={total} color={total > developmentDays ? 'error' : 'primary'}>\n                  <Card style={{ minWidth: 180, background: COLOR_ASSIGNEE }}>\n                    <CardContent>{row.name}</CardContent>\n                  </Card>\n                </StyledBadge>\n                <Droppable droppableId={row.name} direction=\"horizontal\">\n                  {(droppableProvided, droppableSnapshot) => (\n                    <div\n                      ref={droppableProvided.innerRef}\n                      style={getListStyle(droppableSnapshot.isDraggingOver, row.style)}\n                      {...droppableProvided.droppableProps}\n                    >\n                      {row.list.map((item, index) => (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {provided => (\n                            <StyledBadge badgeContent={item.placeholder ? null : item.estimate} color=\"primary\">\n                              <Card\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={getItemStyle(provided.draggableProps.style, item.backgroundColor, item.estimate)}\n                              >\n                                <CardHeader\n                                  subheader={item.placeholder ? '' : item.key}\n                                  style={{ maxWidth: `${100 * item.estimate}px`, padding: '16px 4px 0 4px' }}\n                                />\n                                <CardContent style={{ maxWidth: `${100 * item.estimate}px`, padding: '0 4px 0 4px' }}>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                    style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n                                  >\n                                    {item.summary}\n                                  </Typography>\n                                </CardContent>\n                                <CardActions\n                                  disableSpacing\n                                  style={{ maxWidth: `${100 * item.estimate}px`, padding: '0 4px 0 4px' }}\n                                >\n                                  {!item.placeholder && (\n                                    <IconButton\n                                      aria-label=\"add to favorites\"\n                                      onClick={() => {\n                                        handleInfoClick(item.key, item.summary);\n                                      }}\n                                    >\n                                      <InfoIcon />\n                                    </IconButton>\n                                  )}\n                                  {!item.placeholder &&\n                                    [...item.components, ...item.labels].map(component => (\n                                      <Chip key={`${item.id}:${component}`} label={component} variant=\"outlined\" />\n                                    ))}\n                                </CardActions>\n                              </Card>\n                            </StyledBadge>\n                          )}\n                        </Draggable>\n                      ))}\n                      {droppableProvided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import DateFnsUtils from '@date-io/date-fns';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { enableAllPlugins } from 'immer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}