{"version":3,"sources":["App.js","reportWebVitals.js","theme.js","index.js"],"names":["COLOR_TASK","isWeekDay","date","getDay","addBusinessDays","count","ctr","nextDate","addDays","getItemStyle","draggableStyle","backgroundColor","widthMultiplier","userSelect","padding","margin","boxShadow","textAlign","minWidth","maxWidth","display","background","getListStyle","isDraggingOver","style","minHeight","width","StyledBadge","withStyles","theme","badge","right","top","border","Badge","COMPONENT_LOOKUP","LABEL_LOOKUP","App","useState","id","nanoid","name","developer","list","flexWrap","rows","setRows","links","setLinks","open","title","content","dialog","setDialog","workingDates","setWorkingDates","Date","startDate","setStartDate","sprintDays","setSprintDays","developmentRatio","setDevelopmentRatio","developmentDays","setDevelopmentDays","openSettings","setOpenSettings","useEffect","loop","counter","push","length","calculateWorkingDates","onDrop","csvRows","pop","csvHeaders","shift","data","issueKeyIndex","findIndex","h","issueIdIndex","issueSummaryIndex","issueParentIdIndex","issueEstimateIndex","issueComponentsIndexes","map","i","filter","String","issueLabelIndexes","endToEndLinkedIndexes","endToStartLinkedIndexes","colorPalette","backgroundColorPerParentIds","reduce","acc","parentId","updatedLinks","produce","draft","forEach","index","key","text","issue","updatedRows","taskBucketRowIndex","row","taskBucket","placeholder","summary","estimate","components","curr","component","labels","label","onError","err","file","inputElem","reason","console","log","dropArea","config","addRemoveButton","onRemoveFile","ButtonGroup","disableElevation","variant","marginBottom","Button","startIcon","onClick","items","len","find","item","releaseDate","dateGroup","groupBy","html","Object","keys","sort","a","b","tasks","task","format","input","document","getElementById","html2canvas","allowTaint","scale","then","canvas","toBlob","blob","navigator","clipboard","write","ClipboardItem","Dialog","onClose","DialogTitle","DialogContent","value","onChange","KeyboardButtonProps","TextField","type","event","parseInt","target","Typography","gutterBottom","Slider","newValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","r","updated","handleDeveloperNameChange","IconButton","aria-label","todo","splice","handleRemoveDeveloper","faker","findName","Card","CardContent","onDragEnd","result","source","destination","destinationRowIndex","droppableId","sourceRowIndex","s","d","removed","total","indexOf","marginTop","badgeContent","color","direction","provided","snapshot","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","isDragging","CardHeader","subheader","textOverflow","overflow","whiteSpace","CardActions","disableSpacing","issueKey","issueSummary","linkedIssues","link","linkedIssuesByText","entries","handleInfoClick","Chip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","enableAllPlugins","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","utils","DateFnsUtils"],"mappings":"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","file":"static/js/main.9226b3a9.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid'\nimport faker from 'faker';\nimport { produce } from 'immer';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport getDay from 'date-fns/getDay'\nimport addDays from 'date-fns/addDays'\nimport format from 'date-fns/format'\nimport groupBy from 'lodash/groupBy';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { CSVReader } from 'react-papaparse'\nimport html2canvas from 'html2canvas'\nimport './App.css';\n\nconst COLOR_TASK = '#cbdadb';\nconst COLOR_DEV_DATE = '#99B898';\nconst COLOR_DATE = '#f8fbff'\nconst COLOR_ASSIGNEE = '#f8fbff';\nconst COLOR_1 = '#a8e6cf';\nconst COLOR_2 = '#dcedc1';\nconst COLOR_3 = '#ffd3b6';\nconst COLOR_4 = '#ffaaa5';\nconst COLOR_5 = '#ff8b94';\nconst ISSUE_KEY = 'Issue key';\nconst ISSUE_ID = 'Issue id';\nconst ISSUE_SUMMARY = 'Summary';\nconst ISSUE_PARENT_ID = 'Parent id';\nconst ISSUE_ESTIMATE = 'Σ Original Estimate';\nconst ISSUE_COMPONENTS = 'Components';\nconst ISSUE_LABELS = 'Labels';\nconst ISSUE_LINK_END_TO_START = 'Outward issue link (Gantt End to Start)'\nconst ISSUE_LINK_END_TO_END = 'Outward issue link (Gantt End to End)'\n\nconst isWeekDay = (date) => {\n  const day = getDay(date);\n\n  switch(day) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nconst addBusinessDays = (date, count) => {\n  let ctr = 1;\n  let nextDate = date;\n\n\n  while(ctr <= count) {\n     nextDate = addDays(nextDate, 1);\n\n    if (isWeekDay(nextDate)) {\n      ctr++;\n    }\n  }\n\n  return nextDate;\n}\n\nconst calculateWorkingDates = (startDate, sprintDays) => {\n  let loop = true;\n  let counter = 0;\n  const workingDates = [];\n  while(loop) {\n    const date = addDays(startDate, counter);\n\n    if (isWeekDay(date)) {\n      workingDates.push(date);\n    }\n\n    counter++;\n    if (workingDates.length >= sprintDays) {\n      loop = false;\n    }\n  }\n\n  return workingDates;\n}\n\nconst getItemStyle = (isDragging = false, draggableStyle = {}, backgroundColor= COLOR_TASK,  widthMultiplier = 0.5) => ({\n  // some basic styles to make the jiras look a bit nicer\n  userSelect: 'none',\n  padding: '0 0 0 0',\n  margin: 0,\n  boxShadow: '#302828 0px 0px 2px 0px inset',\n  textAlign: 'center',\n  minWidth: 100 * widthMultiplier,\n  maxWidth: 100 * widthMultiplier,\n  display: 'grid',\n\n  // change background colour if dragging\n  background: backgroundColor,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, style ={}) => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  display: 'flex',\n  padding: 8,\n  minHeight: 36,\n  margin: '0 0 0 10px',\n  width: '100%',\n  ...style\n});\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: 18,\n    top: 13,\n    border: `2px solid black`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\nconst COMPONENT_LOOKUP = {\n  'Back-End': 'be',\n  'Front-End': 'fe',\n  'QA': 'qa'\n};\n\nconst LABEL_LOOKUP = {\n  'technical_task': 'tech',\n};\n\nfunction App() {\n  const [rows, setRows] = useState([\n    {\n      id: nanoid(),\n      name: 'Task Bucket',\n      developer: false,\n      list: [],\n      style: { flexWrap: 'wrap' }\n    }\n  ]);\n  const [links, setLinks] = useState([]);\n  const [dialog, setDialog] = useState({ open: false, title: '', content: '' });\n  const [workingDates, setWorkingDates] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [sprintDays, setSprintDays] = useState(10);\n  const [developmentRatio, setDevelopmentRatio] = useState(0.6);\n  const [developmentDays, setDevelopmentDays] = useState(sprintDays * developmentRatio);\n  const [openSettings, setOpenSettings] = useState(false)\n\n\n  useEffect(()=> {\n    setWorkingDates(calculateWorkingDates(startDate, sprintDays))\n  }, [startDate, sprintDays]);\n\n  useEffect(()=> {\n    setDevelopmentDays(sprintDays * developmentRatio)\n  }, [sprintDays, developmentRatio]);\n\n  const onDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n        return;\n    }\n\n    const updated = produce(rows, draft => {\n      const destinationRowIndex = draft.findIndex(row => row.name === destination.droppableId);\n      const sourceRowIndex = draft.findIndex(row => row.name === source.droppableId);\n\n      const s = draft[sourceRowIndex];\n      const d = draft[destinationRowIndex];\n\n      const [removed]  = s.list.splice(source.index, 1);\n      d.list.splice(destination.index, 0, removed);\n    });\n\n    setRows(updated)\n  }\n\n  const handleOnDrop = (csvRows) => {\n    csvRows.pop();\n    const { data: csvHeaders } = csvRows.shift();\n    const issueKeyIndex = csvHeaders.findIndex(h => h === ISSUE_KEY);\n    const issueIdIndex = csvHeaders.findIndex(h => h === ISSUE_ID);\n    const issueSummaryIndex = csvHeaders.findIndex(h => h === ISSUE_SUMMARY);\n    const issueParentIdIndex = csvHeaders.findIndex(h => h === ISSUE_PARENT_ID);\n    const issueEstimateIndex = csvHeaders.findIndex(h => h === ISSUE_ESTIMATE);\n    const issueComponentsIndexes = csvHeaders.map((h, i) => h === ISSUE_COMPONENTS ? i : '').filter(String);\n    const issueLabelIndexes = csvHeaders.map((h, i) => h === ISSUE_LABELS ? i : '').filter(String);\n    const endToEndLinkedIndexes = csvHeaders.map((h, i) => h === ISSUE_LINK_END_TO_END ? i : '').filter(String);\n    const endToStartLinkedIndexes = csvHeaders.map((h, i) => h === ISSUE_LINK_END_TO_START ? i : '').filter(String);\n\n    const colorPalette = [COLOR_1, COLOR_2, COLOR_3, COLOR_4, COLOR_5];\n    const backgroundColorPerParentIds = csvRows.reduce((acc, {data}) => {\n      const parentId = data[issueParentIdIndex];\n\n      if (parentId === '') {\n        return acc;\n      }\n\n      if (!acc[parentId]) {\n        acc[parentId] = COLOR_TASK;\n      } else if (acc[parentId] === COLOR_TASK) {\n        acc[parentId] = colorPalette.shift();\n      }\n\n      return acc;\n    }, {});\n\n    const updatedLinks = produce(links, draft => {\n      csvRows.forEach(({data}) => {\n\n        endToEndLinkedIndexes.forEach(index => {\n          if (data[index] !== '') {\n            draft.push({\n              key: data[issueKeyIndex],\n              text: 'has to be finished together',\n              issue: data[index]\n            });\n\n            draft.push({\n              key: data[index],\n              text: 'has to be finished together',\n              issue: data[issueKeyIndex]\n            });\n          }\n        });\n\n        endToStartLinkedIndexes.forEach(index => {\n          if (data[index] !== '') {\n            draft.push({\n              key: data[issueKeyIndex],\n              text: 'has to be done before',\n              issue: data[index]\n            });\n\n            draft.push({\n              key: data[index],\n              text: 'has to be done after',\n              issue: data[issueKeyIndex]\n            });\n          }\n        });\n      });\n    });\n\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n\n      const taskBucket = draft[taskBucketRowIndex];\n\n      csvRows.forEach(({data}) => {\n        const id = data[issueIdIndex];\n        taskBucket.list.push({\n          id: id || nanoid(),\n          key: data[issueKeyIndex] || nanoid(),\n          placeholder: id ? false : true,\n          summary: data[issueSummaryIndex],\n          estimate: data[issueEstimateIndex] / 28800,\n          backgroundColor: backgroundColorPerParentIds[data[issueParentIdIndex]],\n          components: issueComponentsIndexes.reduce((acc, curr)=> {\n            const component = COMPONENT_LOOKUP[data[curr]];\n            if (!component) {\n              return acc;\n            }\n\n            acc.push(component)\n\n            return acc;\n          }, []),\n          labels: issueLabelIndexes.reduce((acc, curr)=> {\n            const label = LABEL_LOOKUP[data[curr]];\n            if (!label) {\n              return acc;\n            }\n\n            acc.push(label)\n\n            return acc;\n          }, []),\n        });\n      })\n    });\n\n    setRows(updatedRows);\n    setLinks(updatedLinks);\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  const handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  const handleInfoClick = (issueKey, issueSummary) => {\n    const linkedIssues = links.filter(link => link.key === issueKey);\n\n    const linkedIssuesByText = groupBy(linkedIssues, 'text');\n    setDialog({\n      open: true,\n      title: issueKey,\n      content: <>\n        <Typography variant=\"body1\" gutterBottom>{issueSummary}</Typography>\n        {linkedIssues.length > 0 &&\n          (<>\n            {Object.entries(linkedIssuesByText).map(([key, links]) => {\n              return (<>\n                <Typography variant=\"subtitle1\">{key}:</Typography>\n                {links.map(link => <Typography variant=\"subtitle2\">{link.issue}</Typography>)}\n              </>)\n            })}\n          </>)\n        }\n      </>,\n    });\n  }\n\n  const handleDialogClose = () => {\n    setDialog({\n      open: false,\n      title: '',\n      content: '',\n    });\n  }\n\n  const handleGenerateReport = () => {\n    const items = rows.reduce((acc, row) => {\n      for(let i = 0, len = row.list.length; i < len; i++) {\n        let startDate;\n        if (i === 0) {\n          startDate = workingDates[0];\n        } else {\n          startDate = acc.find(item => item.id === row.list[i-1].id).releaseDate;\n        }\n\n        const item = row.list[i];\n        acc.push({\n          id: item.id,\n          key: item.key,\n          releaseDate: addBusinessDays(startDate, item.estimate)\n        });\n      }\n\n      return acc;\n    }, []);\n\n    const dateGroup  = groupBy(items, 'releaseDate');\n\n    const html = Object.keys(dateGroup).sort((a,b) => new Date(a) - new Date(b)).map(date => {\n      const tasks = dateGroup[date].filter(task => !task.placeholder);\n\n      return (<>\n        <span>{format(new Date(date), 'do MMM')}:</span>\n        <ol>\n          {tasks.map(task => <li>{`https://altayerdigital.atlassian.net/browse/${task.key}`}</li>)}\n        </ol>\n      </>)\n    })\n\n    setDialog({\n      open: true,\n      title: 'Task Grouped By Release Date',\n      content: html,\n    });\n  }\n\n  const takeScreenshot = () => {\n    const input =  document.getElementById('screenshot');\n    html2canvas(input, {\n      backgroundColor: null,\n      allowTaint: true,\n      scale: 2,\n    }).then((canvas) => {\n      // eslint-disable-next-line no-undef\n      canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({'image/png': blob})]));\n\n      setDialog({\n        open: true,\n        title: 'Screenshot copied to clipboard'\n      });\n    });\n  }\n\n  const handleSprintDaysChange = (event) => {\n    setSprintDays(parseInt(event.target.value, 10));\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(true);\n  }\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n  };\n\n  const handleDevelopmentRatioChange = (event, newValue) => {\n    setDevelopmentRatio(newValue);\n  };\n\n  const handleAddDeveloper = () => {\n    const updated = produce(rows, draft => {\n      draft.splice(rows.length - 1, 0, { id: nanoid(), name: faker.name.findName(), developer: true, list: [] });\n    })\n\n    setRows(updated);\n  }\n\n  const handleRemoveDeveloper = (id) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(todo => todo.id === id)\n      if (index !== -1){\n        draft.splice(index, 1);\n      }\n    });\n\n    setRows(updated);\n  }\n\n  const handleDeveloperNameChange = (id, value) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(row => row.id === id);\n      draft[index].name = value;\n    });\n\n    setRows(updated);\n  }\n\n  return (\n    <>\n    <CSVReader\n      onDrop={handleOnDrop}\n      onError={handleOnError}\n      style={{ dropArea: { margin: '20px' } }}\n      config={{}}\n      addRemoveButton\n      onRemoveFile={handleOnRemoveFile}\n    >\n      <span>Drop CSV file here or click to upload.</span>\n    </CSVReader>\n    <ButtonGroup disableElevation variant=\"contained\" style={{ marginBottom: '20px' }}>\n      <Button startIcon={<SettingsIcon />} onClick={handleSettings}>Settings</Button>\n      <Button startIcon={<NotesIcon />} onClick={handleGenerateReport}>Text Report</Button>\n      <Button startIcon={<PhotoCameraIcon />} onClick={takeScreenshot}>Screenshot</Button>\n    </ButtonGroup>\n    <Dialog onClose={handleDialogClose} open={dialog.open}>\n      <DialogTitle>{dialog.title}</DialogTitle>\n      <DialogContent>{dialog.content}</DialogContent>\n    </Dialog>\n    <Dialog onClose={handleSettingsClose} open={openSettings}>\n      <DialogTitle>Settings</DialogTitle>\n      <DialogContent>\n        <div style={{ display: 'grid', padding: '20px' }} >\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog\"\n            label=\"Select start date\"\n            format=\"MM/dd/yyyy\"\n            value={startDate}\n            onChange={setStartDate}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n          <TextField label=\"Sprint Days\" variant=\"outlined\" type=\"number\" value={sprintDays} onChange={handleSprintDaysChange}/>\n          <Typography gutterBottom>Development Ratio</Typography>\n          <Slider\n            value={developmentRatio}\n            onChange={handleDevelopmentRatioChange}\n            aria-labelledby=\"discrete-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.1}\n            marks\n            min={0.1}\n            max={1}\n          />\n          <Typography gutterBottom>Developers</Typography>\n          {rows.filter(r => !!r.developer).map((row) => {\n            return (<div style={{ display: 'flex' }}>\n              <TextField variant=\"outlined\" value={row.name} onChange={(event) => {handleDeveloperNameChange(row.id, event.target.value)}}/>\n              <IconButton aria-label=\"remove\" onClick={() => {handleRemoveDeveloper(row.id)}}>\n                <RemoveIcon />\n              </IconButton>\n            </div>)\n          })}\n          <Button startIcon={<AddIcon />} onClick={handleAddDeveloper}>Add Developer</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n    <div style={{ width: 'fit-content' }} id=\"screenshot\">\n      <div style={{ display: 'flex' }}>\n        <div style={{minWidth: 180, minHeight: '50px'}}>\n\n        </div>\n        <Card style={getListStyle()}>\n          {workingDates.map((date,i) => (\n            <CardContent key={date} style={getItemStyle(false, {}, i < developmentDays ? COLOR_DEV_DATE : COLOR_DATE, 1)}>{format(date, 'do MMM')}</CardContent>\n          ))}\n        </Card>\n      </div>\n      <DragDropContext onDragEnd={onDragEnd}>\n        {rows.map((row) => {\n          const total = row.list.filter(i => i.labels.indexOf('tech') === -1).reduce((acc, curr) => acc + curr.estimate, 0);\n\n          return (<div key={row.name} style={{ display: 'flex', marginTop: '10px' }}>\n            <StyledBadge badgeContent={total} color={total > developmentDays ? 'error' : 'primary'}>\n              <Card style={{minWidth: 180, background: COLOR_ASSIGNEE}}>\n                <CardContent>\n                  {row.name}\n                </CardContent>\n              </Card>\n            </StyledBadge>\n            <Droppable droppableId={row.name} direction=\"horizontal\">\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver, row.style)}\n                  {...provided.droppableProps}\n                >\n                  {row.list.map((item, index) => (\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\n                      {(provided, snapshot) => (\n                        <StyledBadge badgeContent={item.placeholder ? null : item.estimate} color=\"primary\">\n                          <Card\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={getItemStyle(\n                              snapshot.isDragging,\n                              provided.draggableProps.style,\n                              item.backgroundColor,\n                              item.estimate,\n                            )}\n                          >\n                            <CardHeader subheader={item.placeholder ? '' : item.key} style={{maxWidth: `${100*item.estimate}px`, padding: '16px 4px 0 4px'}}/>\n                            <CardContent style={{maxWidth: `${100*item.estimate}px`, padding: '0 4px 0 4px'}}>\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap'}}>\n                                {item.summary}\n                              </Typography>\n                            </CardContent>\n                            <CardActions disableSpacing style={{maxWidth: `${100*item.estimate}px`, padding: '0 4px 0 4px'}}>\n                              {!item.placeholder &&\n                                <IconButton aria-label=\"add to favorites\" onClick={()=> {\n                                  handleInfoClick(item.key, item.summary)\n                                }}>\n                                  <InfoIcon />\n                                </IconButton> \n                              }\n                              {!item.placeholder && [...item.components,...item.labels].map((component) => (\n                                <Chip key={`${item.id}:${component}`} label={component} variant=\"outlined\" />\n                              ))}\n                            </CardActions>\n                          </Card>\n                        </StyledBadge>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )})}\n\n      </DragDropContext>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {enableAllPlugins} from \"immer\"\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n   <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}