{"version":3,"sources":["ButtonMenu.js","LinksContext.js","RowContext.js","CsvDropzone.js","DevelopmentDaysContext.js","NewTaskDialog.js","WorkingDatesContext.js","usePersistentState.js","SettingsDialog.js","StyledBadge.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["ButtonMenu","handleSettings","handleGenerateReport","takeScreenshot","handleNewTask","ButtonGroup","disableElevation","variant","style","marginBottom","Button","startIcon","onClick","createContext","links","setLinks","rows","setRows","COLOR_TASK","COMPONENT_LOOKUP","QA","LABEL_LOOKUP","technical_task","CsvDropzone","useContext","RowContext","LinksContext","onDrop","csvRows","pop","csvHeaders","shift","data","issueKeyIndex","findIndex","h","issueIdIndex","issueSummaryIndex","issueParentIdIndex","issueEstimateIndex","issueComponentsIndexes","map","i","filter","String","issueLabelIndexes","endToEndLinkedIndexes","endToStartLinkedIndexes","colorPalette","backgroundColorPerParentIds","reduce","acc","parentId","updatedLinks","produce","draft","forEach","index","find","d","key","push","text","issue","updatedRows","taskBucketRowIndex","row","name","taskBucket","prepareComponents","curr","component","prepareLabels","label","id","nanoid","backgroundColor","summary","estimate","existingBucket","list","l","existingTask","components","labels","placeholder","onError","err","console","log","dropArea","margin","config","addRemoveButton","onRemoveFile","developmentDays","setDevelopmentDays","EMPTY_NEW_TASK","NewTaskDialog","onClose","open","useState","newTask","setNewTask","taskAssignee","setTaskAssignee","useEffect","Dialog","DialogTitle","DialogContent","display","padding","TextField","type","value","onChange","event","target","FormControlLabel","control","Checkbox","checked","Typography","gutterBottom","Slider","newValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","FormControl","InputLabel","Select","labelId","MenuItem","custom","undefined","workingDates","setWorkingDates","usePersistentState","initialValue","postProcessor","persistentValue","localStorage","getItem","parsedValue","JSON","parse","setValue","setItem","stringify","SettingsDialog","sprintDays","setSprintDays","developmentRatio","setDevelopmentRatio","offDays","setOffDays","WorkingDatesContext","initialStartDate","first","Date","startDate","setStartDate","DevelopmentDaysContext","loop","counter","date","addDays","isOffDay","some","offDay","isSameDay","isWeekend","length","calculateWorkingDates","format","KeyboardButtonProps","parseInt","o","updated","setOffDayDate","IconButton","aria-label","offday","splice","handleOffDayRemove","r","developer","handleDeveloperNameChange","todo","task","handleRemoveDeveloper","faker","findName","withStyles","badge","right","top","border","Badge","addBusinessDays","count","ctr","nextDate","getItemStyle","draggableStyle","widthMultiplier","userSelect","boxShadow","textAlign","minWidth","maxWidth","background","getListStyle","isDraggingOver","minHeight","width","App","flexWrap","title","content","dialog","setDialog","stringDates","stringDate","openSettings","setOpenSettings","openNewTask","setOpenNewTask","rowContextValue","useMemo","linksContextValue","workingDatesContextValue","developmentDaysContextValue","Provider","items","len","item","releaseDate","isValidKey","match","dateGroup","groupBy","html","Object","keys","sort","a","b","tasks","input","document","getElementById","html2canvas","allowTaint","scale","then","canvas","toBlob","blob","navigator","clipboard","write","ClipboardItem","Card","CardContent","onDragEnd","result","source","destination","destinationRowIndex","droppableId","sourceRowIndex","s","removed","total","indexOf","marginTop","StyledBadge","badgeContent","color","direction","droppableProvided","droppableSnapshot","ref","innerRef","droppableProps","draggableId","provided","draggableProps","dragHandleProps","CardHeader","subheader","textOverflow","overflow","whiteSpace","CardActions","disableSpacing","size","rowId","taskIndex","handleTaskRemove","linkedIssues","link","linkedIssuesByText","Link","href","underline","rel","entries","issues","handleInfoClick","Chip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","enableAllPlugins","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","utils","DateFnsUtils"],"mappings":"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","file":"static/js/main.ee791a90.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport AddIcon from '@material-ui/icons/Add';\nimport NotesIcon from '@material-ui/icons/Notes';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { PropTypes } from 'prop-types';\nimport React from 'react';\n\nfunction ButtonMenu({ handleSettings, handleGenerateReport, takeScreenshot, handleNewTask }) {\n  return (\n    <>\n      <ButtonGroup disableElevation variant=\"contained\" style={{ marginBottom: '20px' }}>\n        <Button startIcon={<SettingsIcon />} onClick={handleSettings}>\n          Settings\n        </Button>\n        <Button startIcon={<NotesIcon />} onClick={handleGenerateReport}>\n          Text Report\n        </Button>\n        <Button startIcon={<PhotoCameraIcon />} onClick={takeScreenshot}>\n          Screenshot\n        </Button>\n        <Button startIcon={<AddIcon />} onClick={handleNewTask}>\n          Add Task\n        </Button>\n      </ButtonGroup>\n    </>\n  );\n}\n\nButtonMenu.propTypes = {\n  handleSettings: PropTypes.func,\n  handleGenerateReport: PropTypes.func,\n  takeScreenshot: PropTypes.func,\n  handleNewTask: PropTypes.func,\n};\n\nexport default ButtonMenu;\n","import { createContext } from 'react';\n\nexport default createContext({\n  links: [],\n  setLinks: () => {},\n});\n","import { createContext } from 'react';\n\nexport default createContext({\n  rows: [],\n  setRows: () => {},\n});\n","import { produce } from 'immer';\nimport { nanoid } from 'nanoid';\nimport React, { useContext } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport LinksContext from './LinksContext';\nimport RowContext from './RowContext';\n\nconst COLOR_TASK = '#cbdadb';\n\nconst ISSUE_KEY = 'Issue key';\nconst ISSUE_ID = 'Issue id';\nconst ISSUE_SUMMARY = 'Summary';\nconst ISSUE_PARENT_ID = 'Parent id';\nconst ISSUE_ESTIMATE = 'Σ Original Estimate';\nconst ISSUE_COMPONENTS = 'Components';\nconst ISSUE_LABELS = 'Labels';\nconst ISSUE_LINK_END_TO_START = 'Outward issue link (Gantt End to Start)';\nconst ISSUE_LINK_END_TO_END = 'Outward issue link (Gantt End to End)';\n\nconst COMPONENT_LOOKUP = {\n  'Back-End': 'be',\n  'Front-End': 'fe',\n  QA: 'qa',\n};\n\nconst LABEL_LOOKUP = {\n  technical_task: 'tech',\n};\n\nfunction CsvDropzone() {\n  const { rows, setRows } = useContext(RowContext);\n  const { links, setLinks } = useContext(LinksContext);\n\n  const handleOnDrop = csvRows => {\n    csvRows.pop();\n    const { data: csvHeaders } = csvRows.shift();\n    const issueKeyIndex = csvHeaders.findIndex(h => h === ISSUE_KEY);\n    const issueIdIndex = csvHeaders.findIndex(h => h === ISSUE_ID);\n    const issueSummaryIndex = csvHeaders.findIndex(h => h === ISSUE_SUMMARY);\n    const issueParentIdIndex = csvHeaders.findIndex(h => h === ISSUE_PARENT_ID);\n    const issueEstimateIndex = csvHeaders.findIndex(h => h === ISSUE_ESTIMATE);\n    const issueComponentsIndexes = csvHeaders.map((h, i) => (h === ISSUE_COMPONENTS ? i : '')).filter(String);\n    const issueLabelIndexes = csvHeaders.map((h, i) => (h === ISSUE_LABELS ? i : '')).filter(String);\n    const endToEndLinkedIndexes = csvHeaders.map((h, i) => (h === ISSUE_LINK_END_TO_END ? i : '')).filter(String);\n    const endToStartLinkedIndexes = csvHeaders.map((h, i) => (h === ISSUE_LINK_END_TO_START ? i : '')).filter(String);\n\n    const colorPalette = [\n      '#A8E6CF',\n      '#DCEDC1',\n      '#FFD3B6',\n      '#FFAAA5',\n      '#FF8B94',\n      '#EBD4CB',\n      '#8CBEB2',\n      '#F2EBBF',\n      '#F3B562',\n      '#BEBF95',\n      '#8C2B59',\n      '#BEBF95',\n      '#F5EB67',\n      '#88F7E2',\n      '#FFFFCB',\n    ];\n    const backgroundColorPerParentIds = csvRows.reduce((acc, { data }) => {\n      const parentId = data[issueParentIdIndex];\n\n      if (parentId === '') {\n        return acc;\n      }\n\n      if (!acc[parentId]) {\n        acc[parentId] = COLOR_TASK;\n      } else if (acc[parentId] === COLOR_TASK) {\n        acc[parentId] = colorPalette.shift();\n      }\n\n      return acc;\n    }, {});\n\n    const updatedLinks = produce(links, draft => {\n      csvRows.forEach(({ data }) => {\n        endToEndLinkedIndexes.forEach(index => {\n          if (data[index] === '') {\n            return;\n          }\n\n          const existingLink = draft.find(d => d.key === data[issueKeyIndex]);\n\n          if (existingLink) {\n            return;\n          }\n\n          draft.push({\n            key: data[issueKeyIndex],\n            text: 'has to be finished together',\n            issue: data[index],\n          });\n\n          draft.push({\n            key: data[index],\n            text: 'has to be finished together',\n            issue: data[issueKeyIndex],\n          });\n        });\n\n        endToStartLinkedIndexes.forEach(index => {\n          if (data[index] === '') {\n            return;\n          }\n\n          const existingLink = draft.find(d => d.key === data[issueKeyIndex]);\n\n          if (existingLink) {\n            return;\n          }\n\n          draft.push({\n            key: data[issueKeyIndex],\n            text: 'has to be done before',\n            issue: data[index],\n          });\n\n          draft.push({\n            key: data[index],\n            text: 'has to be done after',\n            issue: data[issueKeyIndex],\n          });\n        });\n      });\n    });\n\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === 'Task Bucket');\n      const taskBucket = draft[taskBucketRowIndex];\n\n      const prepareComponents = data => {\n        return issueComponentsIndexes.reduce((acc, curr) => {\n          const component = COMPONENT_LOOKUP[data[curr]];\n          if (!component) {\n            return acc;\n          }\n\n          acc.push(component);\n\n          return acc;\n        }, []);\n      };\n\n      const prepareLabels = data => {\n        return issueLabelIndexes.reduce((acc, curr) => {\n          const label = LABEL_LOOKUP[data[curr]];\n          if (!label) {\n            return acc;\n          }\n\n          acc.push(label);\n\n          return acc;\n        }, []);\n      };\n\n      csvRows.forEach(({ data }) => {\n        const id = data[issueIdIndex] || nanoid();\n        const key = data[issueKeyIndex] || nanoid();\n        const parentId = data[issueParentIdIndex];\n        const backgroundColor = backgroundColorPerParentIds[parentId];\n        const summary = data[issueSummaryIndex];\n        const estimate = data[issueEstimateIndex];\n\n        const existingBucket = draft.find(d => d.list.find(l => l.key === key));\n        if (existingBucket) {\n          const existingTask = existingBucket.list.find(l => l.key === key);\n\n          existingTask.parentId = parentId;\n          existingTask.summary = summary;\n          existingTask.estimate = estimate / 28800;\n          existingTask.backgroundColor = backgroundColor;\n          existingTask.components = prepareComponents(data);\n          existingTask.labels = prepareLabels(data);\n\n          return;\n        }\n\n        taskBucket.list.push({\n          id,\n          key,\n          parentId,\n          placeholder: !id,\n          summary,\n          estimate: estimate / 28800,\n          backgroundColor,\n          components: prepareComponents(data),\n          labels: prepareLabels(data),\n        });\n      });\n    });\n\n    setRows(updatedRows);\n    setLinks(updatedLinks);\n  };\n\n  const handleOnError = err => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  return (\n    <>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        style={{ dropArea: { margin: '20px' } }}\n        config={{}}\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n    </>\n  );\n}\n\nexport default CsvDropzone;\n","import { createContext } from 'react';\n\nexport default createContext({\n  developmentDays: 10 * 0.6,\n  setDevelopmentDays: () => {},\n});\n","import Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport produce from 'immer';\nimport { nanoid } from 'nanoid';\nimport { PropTypes } from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport RowContext from './RowContext';\n\nconst EMPTY_NEW_TASK = {\n  key: '',\n  name: '',\n  placeholder: false,\n  estimate: '',\n};\n\nfunction NewTaskDialog({ onClose, open }) {\n  const [newTask, setNewTask] = useState(EMPTY_NEW_TASK);\n  const [taskAssignee, setTaskAssignee] = useState('Task Bucket');\n  const { rows, setRows } = useContext(RowContext);\n\n  useEffect(() => {\n    if (open === false) {\n      setNewTask(EMPTY_NEW_TASK);\n      setTaskAssignee('Task Bucket');\n    }\n  }, [open]);\n\n  const handleNewTaskEstimateChange = (event, newValue) => {\n    setNewTask({\n      ...newTask,\n      estimate: newValue,\n    });\n  };\n\n  const handleNewTaskKeyChange = event => {\n    setNewTask({\n      ...newTask,\n      key: event.target.value,\n    });\n  };\n\n  const handleNewTaskPlaceholderChange = event => {\n    setNewTask({\n      ...newTask,\n      placeholder: event.target.checked,\n    });\n  };\n\n  const handleAddNewTask = () => {\n    const updatedRows = produce(rows, draft => {\n      const taskBucketRowIndex = draft.findIndex(row => row.name === taskAssignee);\n\n      // eslint-disable-next-line security/detect-object-injection\n      const taskBucket = draft[taskBucketRowIndex];\n\n      taskBucket.list.push({\n        id: nanoid(),\n        custom: true,\n        key: newTask.key,\n        placeholder: newTask.placeholder,\n        summary: '',\n        estimate: newTask.estimate,\n        backgroundColor: undefined,\n        components: [],\n        labels: [],\n      });\n    });\n\n    setRows(updatedRows);\n    onClose();\n  };\n\n  const handleDeveloperSelect = event => {\n    setTaskAssignee(event.target.value);\n  };\n\n  return (\n    <>\n      <Dialog onClose={onClose} open={open}>\n        <DialogTitle>New Task</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'grid', padding: '20px' }}>\n            <TextField\n              label=\"Key\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={newTask.key}\n              onChange={handleNewTaskKeyChange}\n            />\n            <FormControlLabel\n              label=\"Is Placeholder\"\n              control={<Checkbox checked={newTask.placeholder} onChange={handleNewTaskPlaceholderChange} />}\n            />\n            <Typography gutterBottom>Estimate</Typography>\n            <Slider\n              value={newTask.estimate}\n              onChange={handleNewTaskEstimateChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.5}\n              marks\n              min={0.0}\n              max={6}\n            />\n            <FormControl>\n              <InputLabel id=\"task-assignee-select-label\">Assignee</InputLabel>\n              <Select\n                labelId=\"task-assignee-select-label\"\n                id=\"task-assignee-select\"\n                value={taskAssignee}\n                onChange={handleDeveloperSelect}\n              >\n                {rows\n                  .filter(row => row.id)\n                  .map(row => (\n                    <MenuItem key={row.id} value={row.name}>\n                      {row.name}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </FormControl>\n            <Button startIcon={<AddIcon />} onClick={handleAddNewTask}>\n              Add Task\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nNewTaskDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default NewTaskDialog;\n","import { createContext } from 'react';\n\nexport default createContext({\n  workingDates: [],\n  setWorkingDates: () => {},\n});\n","import { useState, useEffect } from 'react';\n\nexport default function usePersistentState(key, initialValue, postProcessor) {\n  const [value, setValue] = useState(() => {\n    const persistentValue = localStorage.getItem(key);\n\n    if (!persistentValue) {\n      return initialValue;\n    }\n\n    const parsedValue = JSON.parse(persistentValue);\n\n    if (postProcessor) {\n      return postProcessor(parsedValue);\n    }\n\n    return parsedValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport addDays from 'date-fns/addDays';\nimport isSameDay from 'date-fns/isSameDay';\nimport isWeekend from 'date-fns/isWeekend';\nimport faker from 'faker';\nimport { produce } from 'immer';\nimport first from 'lodash/first';\nimport { nanoid } from 'nanoid';\nimport { PropTypes } from 'prop-types';\nimport React, { useState, useEffect, useContext } from 'react';\nimport DevelopmentDaysContext from './DevelopmentDaysContext';\nimport RowContext from './RowContext';\nimport WorkingDatesContext from './WorkingDatesContext';\nimport usePersistentState from './usePersistentState';\n\nconst calculateWorkingDates = (startDate, sprintDays, offDays) => {\n  let loop = true;\n  let counter = 0;\n  const workingDates = [];\n  while (loop) {\n    const date = addDays(startDate, counter);\n    const isOffDay = offDays.some(offDay => isSameDay(offDay.value, date));\n\n    if (!isWeekend(date) && !isOffDay) {\n      workingDates.push(date);\n    }\n\n    counter += 1;\n    if (workingDates.length >= sprintDays) {\n      loop = false;\n    }\n  }\n\n  return workingDates;\n};\n\nfunction SettingsDialog({ onClose, open }) {\n  const [sprintDays, setSprintDays] = useState(10);\n  const [developmentRatio, setDevelopmentRatio] = usePersistentState('developmentRatio', 0.6);\n  const [offDays, setOffDays] = useState([]);\n  const { rows, setRows } = useContext(RowContext);\n  const { workingDates, setWorkingDates } = useContext(WorkingDatesContext);\n  const initialStartDate = first(workingDates) || new Date();\n  const [startDate, setStartDate] = useState(initialStartDate);\n  const { setDevelopmentDays } = useContext(DevelopmentDaysContext);\n\n  useEffect(() => {\n    setWorkingDates(calculateWorkingDates(startDate, sprintDays, offDays));\n  }, [startDate, sprintDays, offDays]);\n\n  useEffect(() => {\n    setDevelopmentDays(sprintDays * developmentRatio);\n  }, [sprintDays, developmentRatio]);\n\n  const handleSprintDaysChange = event => {\n    setSprintDays(parseInt(event.target.value, 10));\n  };\n\n  const handleDevelopmentRatioChange = (event, newValue) => {\n    setDevelopmentRatio(newValue);\n  };\n\n  const handleAddDeveloper = () => {\n    const updated = produce(rows, draft => {\n      draft.splice(rows.length - 1, 0, { id: nanoid(), name: faker.name.findName(), developer: true, list: [] });\n    });\n\n    setRows(updated);\n  };\n\n  const handleRemoveDeveloper = id => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(todo => todo.id === id);\n      if (index !== -1) {\n        const taskBucket = draft.find(row => row.name === 'Task Bucket');\n\n        // eslint-disable-next-line security/detect-object-injection\n        const row = draft[index];\n\n        row.list.forEach(task => taskBucket.list.push(task));\n\n        draft.splice(index, 1);\n      }\n    });\n\n    setRows(updated);\n  };\n\n  const handleDeveloperNameChange = (id, value) => {\n    const updated = produce(rows, draft => {\n      const index = draft.findIndex(row => row.id === id);\n      // eslint-disable-next-line no-param-reassign\n      draft[index].name = value;\n    });\n\n    setRows(updated);\n  };\n\n  const setOffDayDate = (id, event) => {\n    const updated = produce(offDays, draft => {\n      const index = draft.findIndex(row => row.id === id);\n      // eslint-disable-next-line no-param-reassign\n      draft[index].value = event;\n    });\n\n    setOffDays(updated);\n  };\n\n  const handleOffDayRemove = id => {\n    const updated = produce(offDays, draft => {\n      const index = draft.findIndex(offday => offday.id === id);\n\n      draft.splice(index, 1);\n    });\n\n    setOffDays(updated);\n  };\n\n  const addOffDay = () => {\n    const updated = produce(offDays, draft => {\n      draft.splice(offDays.length - 1, 0, { id: nanoid(), value: null });\n    });\n\n    setOffDays(updated);\n  };\n\n  return (\n    <>\n      <Dialog onClose={onClose} open={open}>\n        <DialogTitle>Settings</DialogTitle>\n        <DialogContent>\n          <div style={{ display: 'grid', padding: '20px' }}>\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Select start date\"\n              format=\"dd/MM/yyyy\"\n              value={startDate}\n              onChange={setStartDate}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <TextField\n              label=\"Sprint Days\"\n              variant=\"outlined\"\n              type=\"number\"\n              value={sprintDays}\n              onChange={handleSprintDaysChange}\n            />\n            <Typography gutterBottom>Development Ratio</Typography>\n            <Slider\n              value={developmentRatio}\n              onChange={handleDevelopmentRatioChange}\n              aria-labelledby=\"discrete-slider\"\n              valueLabelDisplay=\"auto\"\n              step={0.1}\n              marks\n              min={0.1}\n              max={1}\n            />\n            <Typography gutterBottom>Off Days</Typography>\n            {offDays\n              .filter(o => !!o.id)\n              .map(offDay => {\n                return (\n                  <div key={offDay.id} style={{ display: 'flex' }}>\n                    <KeyboardDatePicker\n                      margin=\"normal\"\n                      id=\"date-picker-dialog\"\n                      label=\"Select date\"\n                      format=\"dd/MM/yyyy\"\n                      value={offDay.value}\n                      onChange={event => {\n                        setOffDayDate(offDay.id, event);\n                      }}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                    <IconButton\n                      aria-label=\"remove\"\n                      onClick={() => {\n                        handleOffDayRemove(offDay.id);\n                      }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  </div>\n                );\n              })}\n            <Button startIcon={<AddIcon />} onClick={addOffDay}>\n              Add Off Days\n            </Button>\n            <Typography gutterBottom>Developers</Typography>\n            {rows\n              .filter(r => !!r.developer)\n              .map(row => {\n                return (\n                  <div key={row.id} style={{ display: 'flex' }}>\n                    <TextField\n                      variant=\"outlined\"\n                      value={row.name}\n                      onChange={event => {\n                        handleDeveloperNameChange(row.id, event.target.value);\n                      }}\n                    />\n                    <IconButton\n                      aria-label=\"remove\"\n                      onClick={() => {\n                        handleRemoveDeveloper(row.id);\n                      }}\n                    >\n                      <RemoveIcon />\n                    </IconButton>\n                  </div>\n                );\n              })}\n            <Button startIcon={<AddIcon />} onClick={handleAddDeveloper}>\n              Add Developer\n            </Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nSettingsDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default SettingsDialog;\n","import Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport default withStyles(() => ({\n  badge: {\n    right: 18,\n    top: 13,\n    border: `2px solid black`,\n    padding: '0 4px',\n  },\n}))(Badge);\n","import { Link } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport InfoIcon from '@material-ui/icons/Info';\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport isWeekend from 'date-fns/isWeekend';\nimport html2canvas from 'html2canvas';\nimport { produce } from 'immer';\nimport groupBy from 'lodash/groupBy';\nimport { nanoid } from 'nanoid';\nimport React, { useState, useMemo } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport './App.css';\nimport ButtonMenu from './ButtonMenu';\nimport CsvDropzone from './CsvDropzone';\nimport DevelopmentDaysContext from './DevelopmentDaysContext';\nimport LinksContext from './LinksContext';\nimport NewTaskDialog from './NewTaskDialog';\nimport RowContext from './RowContext';\nimport SettingsDialog from './SettingsDialog';\nimport StyledBadge from './StyledBadge';\nimport WorkingDatesContext from './WorkingDatesContext';\nimport usePersistentState from './usePersistentState';\n\nconst COLOR_TASK = '#cbdadb';\nconst COLOR_DEV_DATE = '#99B898';\nconst COLOR_DATE = '#f8fbff';\nconst COLOR_ASSIGNEE = '#f8fbff';\n\nconst addBusinessDays = (date, count) => {\n  let ctr = 1;\n  let nextDate = date;\n\n  while (ctr <= count) {\n    nextDate = addDays(nextDate, 1);\n\n    if (!isWeekend(nextDate)) {\n      ctr += 1;\n    }\n  }\n\n  return nextDate;\n};\n\nconst getItemStyle = (draggableStyle = {}, backgroundColor = COLOR_TASK, widthMultiplier = 0.5) => ({\n  // some basic styles to make the jiras look a bit nicer\n  userSelect: 'none',\n  padding: '0 0 0 0',\n  margin: 0,\n  boxShadow: '#302828 0px 0px 2px 0px inset',\n  textAlign: 'center',\n  minWidth: 100 * widthMultiplier,\n  maxWidth: 100 * widthMultiplier,\n  display: 'grid',\n\n  // change background colour if dragging\n  background: backgroundColor,\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nconst getListStyle = (isDraggingOver, style = {}) => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  display: 'flex',\n  padding: 8,\n  minHeight: 36,\n  margin: '0 0 0 10px',\n  width: '100%',\n  ...style,\n});\n\nfunction App() {\n  const [rows, setRows] = usePersistentState('rows', [\n    {\n      id: nanoid(),\n      name: 'Task Bucket',\n      developer: false,\n      list: [],\n      style: { flexWrap: 'wrap' },\n    },\n  ]);\n  const [links, setLinks] = useState([]);\n  const [dialog, setDialog] = useState({ open: false, title: '', content: '' });\n  const [workingDates, setWorkingDates] = usePersistentState('workingDates', [], stringDates => {\n    return stringDates.map(stringDate => new Date(stringDate));\n  });\n  const [developmentDays, setDevelopmentDays] = useState(10 * 0.6);\n  const [openSettings, setOpenSettings] = useState(false);\n  const [openNewTask, setOpenNewTask] = useState(false);\n\n  const rowContextValue = useMemo(() => ({ rows, setRows }), [rows]);\n  const linksContextValue = useMemo(() => ({ links, setLinks }), [links]);\n  const workingDatesContextValue = useMemo(() => ({ workingDates, setWorkingDates }), [workingDates]);\n  const developmentDaysContextValue = useMemo(() => ({ developmentDays, setDevelopmentDays }), [developmentDays]);\n\n  const onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    const updated = produce(rows, draft => {\n      const destinationRowIndex = draft.findIndex(row => row.id === destination.droppableId);\n      const sourceRowIndex = draft.findIndex(row => row.id === source.droppableId);\n\n      const s = draft[sourceRowIndex];\n      const d = draft[destinationRowIndex];\n\n      const [removed] = s.list.splice(source.index, 1);\n      d.list.splice(destination.index, 0, removed);\n    });\n\n    setRows(updated);\n  };\n\n  const handleTaskRemove = (rowId, taskIndex) => {\n    const updated = produce(rows, draft => {\n      const row = draft.find(r => r.id === rowId);\n\n      row.list.splice(taskIndex, 1);\n    });\n\n    setRows(updated);\n  };\n\n  const handleInfoClick = item => {\n    const linkedIssues = links.filter(link => link.key === item.key);\n\n    const linkedIssuesByText = groupBy(linkedIssues, 'text');\n    setDialog({\n      open: true,\n      title: item.custom ? (\n        item.key\n      ) : (\n        <>\n          <Link\n            key={item.key}\n            href={`https://altayerdigital.atlassian.net/issues/?jql=id%20%3D%20${item.key}`}\n            underline=\"hover\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            {item.key}\n          </Link>\n          {' - '}\n          <Link\n            key={item.parentId}\n            href={`https://altayerdigital.atlassian.net/issues/?jql=id%20%3D%20${item.parentId}`}\n            underline=\"hover\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            variant=\"subtitle2\"\n          >\n            {'Parent Issue'}\n          </Link>\n        </>\n      ),\n      content: (\n        <>\n          <Typography variant=\"body1\" gutterBottom>\n            {item.summary}\n          </Typography>\n          {linkedIssues.length > 0 && (\n            <>\n              {Object.entries(linkedIssuesByText).map(([key, issues]) => {\n                return (\n                  <>\n                    <Typography variant=\"subtitle2\">{key}:</Typography>\n                    {issues.map(link => (\n                      <Link\n                        key={link.issue}\n                        href={`https://altayerdigital.atlassian.net/browse/${link.issue}`}\n                        underline=\"hover\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        {link.issue}\n                      </Link>\n                    ))}\n                  </>\n                );\n              })}\n            </>\n          )}\n        </>\n      ),\n    });\n  };\n\n  const handleDialogClose = () => {\n    setDialog({\n      open: false,\n      title: '',\n      content: '',\n    });\n  };\n\n  const handleGenerateReport = () => {\n    const items = rows\n      .filter(r => r.name !== 'Task Bucket')\n      .reduce((acc, row) => {\n        for (let i = 0, len = row.list.length; i < len; i++) {\n          let date;\n          if (i === 0) {\n            [date] = workingDates;\n          } else {\n            date = acc.find(item => item.id === row.list[i - 1].id).releaseDate;\n          }\n\n          const item = row.list[i];\n          const isValidKey = !!item.key.match(/^[A-Z]+-\\d+$/);\n\n          if (!item.placeholder && isValidKey) {\n            acc.push({\n              id: item.id,\n              key: item.key,\n              releaseDate: addBusinessDays(date, item.estimate),\n            });\n          }\n        }\n\n        return acc;\n      }, []);\n\n    const dateGroup = groupBy(items, 'releaseDate');\n\n    const html = Object.keys(dateGroup)\n      .sort((a, b) => new Date(a) - new Date(b))\n      .map(date => {\n        const tasks = dateGroup[date].filter(task => !task.placeholder);\n\n        return (\n          <>\n            <span>{format(new Date(date), 'do MMM')}:</span>\n            <ol>\n              {tasks.map(task => (\n                <li key={task.key}>{`https://altayerdigital.atlassian.net/browse/${task.key}`}</li>\n              ))}\n            </ol>\n          </>\n        );\n      });\n\n    setDialog({\n      open: true,\n      title: 'Task Grouped By Release Date',\n      content: html,\n    });\n  };\n\n  const takeScreenshot = () => {\n    const input = document.getElementById('screenshot');\n    html2canvas(input, {\n      backgroundColor: null,\n      allowTaint: true,\n      scale: 2,\n    }).then(canvas => {\n      // eslint-disable-next-line no-undef\n      canvas.toBlob(blob => navigator.clipboard.write([new ClipboardItem({ 'image/png': blob })]));\n\n      setDialog({\n        open: true,\n        title: 'Screenshot copied to clipboard',\n      });\n    });\n  };\n\n  const handleSettings = () => {\n    setOpenSettings(true);\n  };\n\n  const handleSettingsClose = () => {\n    setOpenSettings(false);\n  };\n\n  const handleNewTask = () => {\n    setOpenNewTask(true);\n  };\n\n  const handleNewTaskClose = () => {\n    setOpenNewTask(false);\n  };\n\n  return (\n    <>\n      <LinksContext.Provider value={linksContextValue}>\n        <RowContext.Provider value={rowContextValue}>\n          <CsvDropzone />\n        </RowContext.Provider>\n      </LinksContext.Provider>\n      <ButtonMenu\n        handleSettings={handleSettings}\n        handleGenerateReport={handleGenerateReport}\n        takeScreenshot={takeScreenshot}\n        handleNewTask={handleNewTask}\n      />\n      <Dialog onClose={handleDialogClose} open={dialog.open}>\n        <DialogTitle>{dialog.title}</DialogTitle>\n        <DialogContent>{dialog.content}</DialogContent>\n      </Dialog>\n      <WorkingDatesContext.Provider value={workingDatesContextValue}>\n        <DevelopmentDaysContext.Provider value={developmentDaysContextValue}>\n          <RowContext.Provider value={rowContextValue}>\n            <SettingsDialog onClose={handleSettingsClose} open={openSettings} />\n          </RowContext.Provider>\n        </DevelopmentDaysContext.Provider>\n      </WorkingDatesContext.Provider>\n      <RowContext.Provider value={rowContextValue}>\n        <NewTaskDialog onClose={handleNewTaskClose} open={openNewTask} />\n      </RowContext.Provider>\n      <div style={{ width: 'fit-content' }} id=\"screenshot\">\n        <div style={{ display: 'flex' }}>\n          <div style={{ minWidth: 180, minHeight: '50px' }}></div>\n          <Card style={getListStyle()}>\n            {workingDates.map((date, i) => {\n              return (\n                <CardContent key={date} style={getItemStyle({}, i < developmentDays ? COLOR_DEV_DATE : COLOR_DATE, 1)}>\n                  {format(date, 'do MMM')}\n                </CardContent>\n              );\n            })}\n          </Card>\n        </div>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {rows.map(row => {\n            const total = row.list\n              .filter(i => i.labels.indexOf('tech') === -1)\n              .reduce((acc, curr) => acc + (curr.placeholder ? 0 : curr.estimate), 0);\n\n            return (\n              <div key={row.id} style={{ display: 'flex', marginTop: '10px' }}>\n                <StyledBadge badgeContent={total} color={total > developmentDays ? 'error' : 'primary'}>\n                  <Card style={{ minWidth: 180, background: COLOR_ASSIGNEE }}>\n                    <CardContent>{row.name}</CardContent>\n                  </Card>\n                </StyledBadge>\n                <Droppable droppableId={row.id} direction=\"horizontal\">\n                  {(droppableProvided, droppableSnapshot) => (\n                    <div\n                      ref={droppableProvided.innerRef}\n                      style={getListStyle(droppableSnapshot.isDraggingOver, row.style)}\n                      {...droppableProvided.droppableProps}\n                    >\n                      {row.list.map((item, index) => (\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {provided => (\n                            <StyledBadge badgeContent={item.placeholder ? null : item.estimate} color=\"primary\">\n                              <Card\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={getItemStyle(provided.draggableProps.style, item.backgroundColor, item.estimate)}\n                              >\n                                <CardHeader\n                                  subheader={item.placeholder ? '' : item.key}\n                                  style={{ maxWidth: `${100 * item.estimate}px`, padding: '16px 4px 0 4px' }}\n                                />\n                                <CardContent style={{ maxWidth: `${100 * item.estimate}px`, padding: '0 4px 0 4px' }}>\n                                  <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                    component=\"p\"\n                                    style={{ textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n                                  >\n                                    {item.summary}\n                                  </Typography>\n                                </CardContent>\n                                <CardActions\n                                  disableSpacing\n                                  style={{ maxWidth: `${100 * item.estimate}px`, padding: '0 4px 0 4px' }}\n                                >\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={() => {\n                                      handleTaskRemove(row.id, index);\n                                    }}\n                                  >\n                                    <ClearIcon />\n                                  </IconButton>\n                                  {!item.placeholder && (\n                                    <IconButton\n                                      size=\"small\"\n                                      onClick={() => {\n                                        handleInfoClick(item);\n                                      }}\n                                    >\n                                      <InfoIcon />\n                                    </IconButton>\n                                  )}\n                                  {!item.placeholder &&\n                                    [...item.components, ...item.labels].map(component => (\n                                      <Chip\n                                        key={`${item.id}:${component}`}\n                                        label={component}\n                                        variant=\"outlined\"\n                                        size=\"small\"\n                                      />\n                                    ))}\n                                </CardActions>\n                              </Card>\n                            </StyledBadge>\n                          )}\n                        </Draggable>\n                      ))}\n                      {droppableProvided.placeholder}\n                    </div>\n                  )}\n                </Droppable>\n              </div>\n            );\n          })}\n        </DragDropContext>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import DateFnsUtils from '@date-io/date-fns';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { enableAllPlugins } from 'immer';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <App />\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}